[{"id":"acr","name":"Azure container Registry","description":"The ACR plugin can be used to build and publish images to the Azure ECR\nregistry.\n","settings":{"registry":{"type":"string","defaultValue":"azurecr.io","description":"authenticates to this registry","secret":false,"required":false},"service_principal_client_id":{"type":"string","defaultValue":"","description":"authenticates with this username","secret":false,"required":false},"service_principal_client_secret":{"type":"string","defaultValue":"","description":"authenticates with this password","secret":true,"required":false},"repo":{"type":"string","defaultValue":"","description":"repository name for the image","secret":false,"required":false}},"image":"plugins/acr","example":"kind: pipeline\nname: default\n\nsteps:\n- name: docker  \n  image: plugins/acr\n  settings:\n    service_principal_client_id: kevinbacon\n    service_principal_client_secret: pa55word\n    repo: foo/bar\n","url":"https://github.com/drone-plugins/drone-docker"},{"id":"airbrake-deployment","name":"airbrake-deployment","description":"Use the airbrake-deployment plugin to notify Airbrake of deployment in a certain environment.","settings":{"airbrake_environment":{"type":"string","defaultValue":"","description":"environment have been deployed in the drone build","secret":false,"required":true},"secrets":{"type":"array","defaultValue":"","description":"project ID of airbrake project & project API key of airbrake project","secret":true,"required":true}},"image":"dhoeric/drone-airbrake-deployment:latest","example":"kind: pipeline\ntype: docker\nname: notify_airbrake\n\nsteps:\n- name: airbrake\n  image: dhoeric/drone-airbrake-deployment:latest\n  settings:\n    airbrake_environment: staging\n    secrets:\n    - airbrake_project_id\n    - airbrake_project_key\n","url":"https://github.com/dhoeric/drone-airbrake-deployment"},{"id":"ansible","name":"Ansible","description":"The Ansible plugin can be used to run ansible plays.","settings":{"become":{"type":"boolean","defaultValue":false,"description":"run operations with become","secret":false,"required":false},"become_method":{"type":"string","defaultValue":"","description":"privilege escalation method to use","secret":false,"required":false},"become_user":{"type":"string","defaultValue":"","description":"run operations as this user","secret":false,"required":false},"check":{"type":"boolean","defaultValue":false,"description":"run a check, do not apply any changes","secret":false,"required":false},"connection":{"type":"string","defaultValue":"","description":"connection type to use","secret":false,"required":false},"diff":{"type":"boolean","defaultValue":false,"description":"show the differences, may print secrets","secret":false,"required":false},"extra_vars":{"type":"string","defaultValue":"","description":"set additional variables as key=value e.g. 'key1=value1,[key2=value2]'","secret":false,"required":false},"flush_cache":{"type":"boolean","defaultValue":false,"description":"clear the fact cache for every host in inventory","secret":false,"required":false},"force_handlers":{"type":"boolean","defaultValue":false,"description":"run handlers even if a task fails","secret":false,"required":false},"forks":{"type":"number","defaultValue":5,"description":"specify number of parallel processes to use","secret":false,"required":false},"galaxy":{"type":"string","defaultValue":"","description":"path to galaxy requirements","secret":false,"required":false},"galaxy_force":{"type":"boolean","defaultValue":true,"description":"force overwriting an existing role or collection","secret":false,"required":false},"inventory":{"type":"string","defaultValue":"","description":"specify (multiple) inventory host path(s) e.g. 'path1,[path2]'","secret":false,"required":false},"limit":{"type":"string","defaultValue":"","description":"further limit selected hosts to an additional pattern","secret":false,"required":false},"list_hosts":{"type":"boolean","defaultValue":false,"description":"outputs a list of matching hosts","secret":false,"required":false},"list_tags":{"type":"boolean","defaultValue":false,"description":"list all available tags","secret":false,"required":false},"list_tasks":{"type":"boolean","defaultValue":false,"description":"list all tasks that would be executed","secret":false,"required":false},"module_path":{"type":"string","defaultValue":"","description":"prepend paths to module library e.g. 'path1,[path2]'","secret":false,"required":false},"playbook":{"type":"string","defaultValue":"","description":"list of playbooks to apply e.g. 'playbook1,[playbook2]'","secret":false,"required":false},"private_key":{"type":"string","defaultValue":"","description":"use this key to authenticate the ssh connection","secret":true,"required":false},"requirements":{"type":"string","defaultValue":"","description":"path to python requirements","secret":false,"required":false},"scp_extra_args":{"type":"string","defaultValue":"","description":"specify extra arguments to pass to scp only","secret":false,"required":false},"sftp_extra_args":{"type":"string","defaultValue":"","description":"specify extra arguments to pass to sftp only","secret":false,"required":false},"ssh_common_args":{"type":"string","defaultValue":"","description":"specify common arguments to pass to sftp/scp/ssh","secret":false,"required":false},"ssh_extra_args":{"type":"string","defaultValue":"","description":"specify extra arguments to pass to ssh only","secret":false,"required":false},"skip_tags":{"type":"array","defaultValue":"","description":"only run plays and tasks whose tags do not match","secret":false,"required":false},"start_at_task":{"type":"string","defaultValue":"","description":"start the playbook at the task matching this name","secret":false,"required":false},"syntax_check":{"type":"boolean","defaultValue":false,"description":"perform a syntax check on the playbook","secret":false,"required":false},"tags":{"type":"array","defaultValue":"","description":"only run plays and tasks tagged with these values","secret":false,"required":false},"timeout":{"type":"number","defaultValue":0,"description":"override the connection timeout in seconds","secret":false,"required":false},"user":{"type":"string","defaultValue":"","description":"connect as this user","secret":false,"required":false},"vault_id":{"type":"string","defaultValue":"","description":"the vault identity to use","secret":false,"required":false},"vault_password":{"type":"string","defaultValue":"","description":"the vault password to use","secret":true,"required":false},"verbose":{"type":"number","defaultValue":0,"description":"level of verbosity, 0 up to 4","secret":false,"required":false}},"image":"plugins/ansible:3","example":"kind: pipeline\nname: default\n\nsteps:\n- name: check ansible syntax\n  image: plugins/ansible:3\n  settings:\n    playbook: ansible/playbook.yml\n    galaxy: ansible/requirements.yml\n    inventory: ansible/inventory\n    syntax_check: true\n","url":"https://github.com/drone-plugins/drone-ansible"},{"id":"anynines","name":"Anynines","description":"This plugin deploys your application on the Anynines platform.","settings":{"username":{"type":"string","defaultValue":"","description":"Username for Anynines auth.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"Password for Anynines auth.","secret":true,"required":true},"organization":{"type":"string","defaultValue":"","description":"Organization on Anynines.","secret":false,"required":true},"space":{"type":"string","defaultValue":"","description":"Space within Anynines organization.","secret":false,"required":false},"skip_cleanup":{"type":"boolean","defaultValue":false,"description":"Skip cleanup of workspace.","secret":false,"required":false}},"image":"plugins/anynines","example":"kind: pipeline\nname: default\n\nsteps:\n- name: anynines\n  image: plugins/anynines\n  settings:\n    username: octocat@github.com\n    password: password\n    organization: octocat_github_com\n","url":"https://github.com/drone-plugins/drone-anynines"},{"id":"apex-up","name":"Apex Up","description":"This plugin can deploy infinitely scalable serverless apps, apis, and sites in seconds to AWS using apex/up tool.","settings":{"secrets":{"type":"array","defaultValue":"","description":"AWS access key and secret access key.","secret":true,"required":true},"directory":{"type":"string","defaultValue":"","description":"Change working directory.","secret":false,"required":false},"stage":{"type":"array","defaultValue":"","description":"Target stage names - staging or production.","secret":false,"required":true},"verbose":{"type":"boolean","defaultValue":true,"description":"Enable verbose log output.","secret":false,"required":false}},"image":"appleboy/drone-apex-up","example":"kind: pipeline\nname: default\n\nsteps:\n- name: apex-up\n  image: appleboy/drone-apex-up\n  settings:\n    secrets: \n      - aws_secret_access_key\n      - aws_access_key_id\n    stage: \n      - staging\n      - production\n","url":"https://github.com/appleboy/drone-apex-up"},{"id":"artifactory","name":"Artifactory","description":"Use this plugin to publish artifacts from the build to Artifactory.","settings":{"url":{"type":"string","defaultValue":"","description":"Artifactory URL (Includes scheme).","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"Artifactory username.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"Artifactory password.","secret":true,"required":true},"pom":{"type":"string","defaultValue":"","description":"The path to a pom.xml file were to read project details.","secret":false,"required":false},"group_id":{"type":"string","defaultValue":"default to value from Pom file.","description":"Project group id.","secret":false,"required":false},"artifact_id":{"type":"string","defaultValue":"default to value from Pom file.","description":"Project artifact id.","secret":false,"required":false},"version":{"type":"string","defaultValue":"default to value from Pom file.","description":"Artifact version.","secret":false,"required":false},"repo_key":{"type":"string","defaultValue":"libs-snapshot-local if version contains snapshot, libs-release-local otherwise.","description":"Target repository key.","secret":false,"required":false},"files":{"type":"array","defaultValue":"","description":"List of files to deploy.","secret":false,"required":false},"force_upload":{"type":"boolean","defaultValue":false,"description":"Force upload if a file already exists.","secret":false,"required":false}},"image":"athieriot/drone-artifactory","example":"kind: pipeline\nname: default\n\nsteps:\n- name: artifactory\n  image: athieriot/drone-artifactory\n  settings:\n    url: http://arti.company.com\n    username: admin\n    password: password\n    pom: pom.xml\n    files:\n      - target/*.jar\n      - target/*.war\n","url":"https://github.com/athieriot/drone-artifactory"},{"id":"b2","name":"Backblaze B2","description":"The B2 plugin uploads files and build artifacts to your B2 bucket.","settings":{"account":{"type":"string","defaultValue":"","description":"backblaze account ID.","secret":false,"required":false},"key":{"type":"string","defaultValue":"","description":"backblaze secret key.","secret":true,"required":false},"bucket":{"type":"string","defaultValue":"","description":"bucket name.","secret":false,"required":false},"source":{"type":"string","defaultValue":"","description":"source location of the files, using a glob matching pattern.","secret":false,"required":false},"target":{"type":"string","defaultValue":"","description":"target location of files in the bucket.","secret":false,"required":false},"strip_prefix":{"type":"boolean","defaultValue":false,"description":"strip the prefix from source path.","secret":false,"required":false},"exclude":{"type":"array","defaultValue":"","description":"glob exclusion patterns.","secret":false,"required":false},"path_style":{"type":"string","defaultValue":"","description":"whether path style URLs should be used (true for minio).","secret":false,"required":false}},"image":"techknowlogick/drone-b2","example":"kind: pipeline\nname: default\n\nsteps:\n- name: b2\n  image: techknowlogick/drone-b2\n  settings:\n    bucket: my-bucket-name\n    account: a50d28f4dd477bc184fbd10b376de753\n    key: bc5785d3ece6a9cdefa42eb99b58986f9095ff1c\n    source: public/**/*\n    target: /target/location\n","url":"https://github.com/techknowlogick/drone-b2"},{"id":"bluemix-cloudfoundry","name":"Bluemix Cloud Foundry","description":"The Bluemix Cloud Foundry plugin can be used to deploy files and/or services to Bluemix.","settings":{"BLUEMIX_API":{"type":"string","defaultValue":"","description":"target api endpoint (e.g. https://api.example.com).","secret":true,"required":false},"BLUEMIX_USER":{"type":"string","defaultValue":"","description":"BLUEMIX username.","secret":true,"required":false},"BLUEMIX_PASSWORD":{"type":"string","defaultValue":"","description":"BLUEMIX password.","secret":true,"required":false},"BLUEMIX_ORG":{"type":"string","defaultValue":"","description":"target BLUEMIX org.","secret":true,"required":false},"BLUEMIX_SPACE":{"type":"boolean","defaultValue":false,"description":"target BLUEMIX space.","secret":true,"required":false},"api":{"type":"string","defaultValue":"","description":"Target API (e.g. api.ng.bluemix.net).","secret":false,"required":false},"org":{"type":"string","defaultValue":"","description":"Target Org (e.g. xyz-org).","secret":false,"required":false},"space":{"type":"string","defaultValue":"","description":"Target Space (e.g. development).","secret":false,"required":false},"user":{"type":"string","defaultValue":"","description":"Auth username (e.g. john@doe.com).","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"Auth password (e.g. mypassword).","secret":true,"required":false},"name":{"type":"string","defaultValue":"","description":"Override application name (e.g. app-canary).","secret":false,"required":false},"buildpack":{"type":"string","defaultValue":"","description":"Custom buildpack (e.g. https://....).","secret":false,"required":false},"command":{"type":"string","defaultValue":"","description":"Startup command (e.g. start-script.sh).","secret":false,"required":false},"domain":{"type":"string","defaultValue":"","description":"Domain (e.g. example.com).","secret":false,"required":false},"manifest":{"type":"string","defaultValue":"","description":"Path to manifest (e.g. test.manifest.yml).","secret":false,"required":false},"docker_image":{"type":"string","defaultValue":"","description":"Image name (e.g. ibmclouddevops/drone-bluemix-cloudfoundry).","secret":false,"required":false},"instances":{"type":"number","defaultValue":"","description":"Number of instances (e.g. 2).","secret":false,"required":false},"disk":{"type":"string","defaultValue":"","description":"Disk limit (e.g. 256M).","secret":false,"required":false},"memory":{"type":"string","defaultValue":"","description":"Memory limit (e.g. 256M).","secret":false,"required":false},"hostname":{"type":"string","defaultValue":"","description":"Hostname (e.g. my-app).","secret":false,"required":false},"path":{"type":"string","defaultValue":"","description":"App path (e.g. build/assets).","secret":false,"required":false},"stack":{"type":"string","defaultValue":"","description":"Stack to use (e.g. cflinuxfs2).","secret":false,"required":false},"timeout":{"type":"number","defaultValue":"","description":"App start timeout (e.g. 60).","secret":false,"required":false},"health_check_type":{"type":"string","defaultValue":"","description":"Application health check type (e.g. port).","secret":false,"required":false},"route_path":{"type":"string","defaultValue":"","description":"Path for the route (e.g. about).","secret":false,"required":false},"no_hostname":{"type":"boolean","defaultValue":false,"description":"Map the root domain to this app","secret":false,"required":false},"no_manifest":{"type":"boolean","defaultValue":false,"description":"Ignore manifest file","secret":false,"required":false},"no_route":{"type":"boolean","defaultValue":false,"description":"Do not map a route to this app and remove routes from previous pushes of this app.","secret":false,"required":false},"no_start":{"type":"boolean","defaultValue":false,"description":"Do not start an app after pushing.","secret":false,"required":false},"random_route":{"type":"boolean","defaultValue":false,"description":"Create a random route for this app.","secret":false,"required":false},"skip_ssl":{"type":"boolean","defaultValue":false,"description":"Skip verification of the API endpoint. Not recommended!.","secret":false,"required":false}},"image":"ibmclouddevops/drone-bluemix-cloudfoundry","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: ibmclouddevops/drone-bluemix-cloudfoundry\n  settings:\n    region: ng\n    org: cloud\n    space: production\n","url":"https://github.com/ibmclouddevops/drone-bluemix-cloudfoundry"},{"id":"buildah","name":"Drone Buildah","description":"Drone plugin uses Buildah to build and publish Docker images to a container registry. It mimics the Docker plugin.","settings":{"dry-run":{"type":"boolean","defaultValue":false,"description":"dry run disables docker push","secret":false,"required":false},"dockerfile":{"type":"string","defaultValue":"Dockerfile","description":"dockerfile to use","secret":false,"required":false},"context":{"type":"string","defaultValue":".","description":"build context","secret":false,"required":false},"tags":{"type":"string","defaultValue":"list","description":"tag used to tage built image, default \"latest\"","secret":false,"required":false},"tags_auto":{"type":"string","defaultValue":"","description":"default build tags","secret":false,"required":false},"tags_suffix":{"type":"string","defaultValue":"","description":"suffix to append to build tags","secret":false,"required":false},"args":{"type":"string","defaultValue":"","description":"additional build args","secret":false,"required":false},"args-from-env":{"type":"string","defaultValue":"","description":"additional build args from env","secret":false,"required":false},"quiet":{"type":"boolean","defaultValue":false,"description":"quiet mode","secret":false,"required":false},"target":{"type":"string","defaultValue":"","description":"build target","secret":false,"required":false},"squash":{"type":"boolean","defaultValue":false,"description":"squash image layers","secret":false,"required":false},"pull-image":{"type":"boolean","defaultValue":false,"description":"force pull base image at build time","secret":false,"required":false},"compress":{"type":"boolean","defaultValue":false,"description":"compress image layers","secret":false,"required":false},"repo":{"type":"string","defaultValue":"","description":"docker repository used to push image","secret":false,"required":false},"custom-labels":{"type":"array","defaultValue":[],"description":"additional k=v labels","secret":false,"required":false},"label-schema":{"type":"string","defaultValue":"","description":"label schema to use","secret":false,"required":false},"auto-label":{"type":"boolean","defaultValue":false,"description":"auto label image","secret":false,"required":false},"link":{"type":"string","defaultValue":"","description":"link, for example https://example.com/org/repo-name","secret":false,"required":false}},"image":"plugins/buildah","example":"kind: pipeline\nname: default\n\nsteps:\n  - name: publish  \n    image: plugins/buildah\n    settings:\n      repo: docker.io/harness/ci-automation\n      registry: docker.io\n      password: \n        from_secret: password\n      username: \n        from_secret: username\n      dockerfile: Dockerfile\n      tags: buildahoutput\n      layers: true\n      s3_local_cache_dir: ./test\n      s3_bucket: <s3_bucket_name>\n      s3_region: us-east-1\n      s3_key: <s3_access_key>\n      s3_secret: \n        from_secret: <s3_secret>\n      s3_endpoint: s3.amazonaws.com\n","url":"https://github.com/drone-plugins/drone-buildah"},{"id":"cache","name":"Drone Cache","description":"A Drone plugin for caching current workspace files between builds to reduce your build times. `drone-cache` is a small CLI program, written in Go without any external OS dependencies (such as tar, etc).","settings":{"backend":{"type":"string","defaultValue":"s3","description":"cache backend to use in plugin (s3, filesystem).","secret":false,"required":false},"mount":{"type":"array","defaultValue":[],"description":"cache directories, an array of folders to cache.","secret":false,"required":false},"rebuild":{"type":"boolean","defaultValue":false,"description":"whether to rebuild the cache directories.","secret":false,"required":false},"restore":{"type":"boolean","defaultValue":false,"description":"whether to restore the cache directories.","secret":false,"required":false},"cache-key":{"type":"string","defaultValue":"","description":"cache key to use for the cache directories.","secret":false,"required":false},"archive-format":{"type":"string","defaultValue":"tar","description":"archive format to use for the cache directories (tar, gzip).","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"whether to enable debug mode.","secret":false,"required":false},"filesystem-cache-route":{"type":"string","defaultValue":"/tmp/cache","description":"local filesystem root directory for the filesystem cache.","secret":false,"required":false},"endpoint":{"type":"string","defaultValue":"","description":"endpoint for the s3 connection.","secret":false,"required":false},"access-key":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":false},"secret-key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":false},"bucket":{"type":"string","defaultValue":"","description":"AWS bucket name.","secret":false,"required":false},"region":{"type":"string","defaultValue":"","description":"AWS bucket region.","secret":false,"required":false},"path-style":{"type":"boolean","defaultValue":false,"description":"use path style for bucket paths. (true for minio, false for aws).","secret":false,"required":false},"acl":{"type":"string","defaultValue":"private","description":"upload files with acl (private, public-read, ...).","secret":false,"required":false},"encryption":{"type":"string","defaultValue":"none","description":"server-side encryption algorithm (AES256, aws:kms).","secret":false,"required":false}},"image":"meltwater/drone-cache:dev","example":"kind: pipeline\nname: default\n\nsteps:\n  - name: restore-cache\n    image: meltwater/drone-cache:dev\n    pull: true\n    settings:\n      access-key:\n        from_secret: aws_access_key_id\n      secret-key:\n        from_secret: aws_secret_access_key\n      restore: true\n      bucket: drone-cache-bucket\n      region: eu-west-1\n      mount:\n        - 'vendor'\n\n  - name: build\n    image: golang:1.11-alpine\n    pull: true\n    commands:\n      - apk add --update make git\n      - make drone-cache\n\n  - name: rebuild-cache\n    image: meltwater/drone-cache:dev\n    pull: true\n    settings:\n      access-key:\n        from_secret: aws_access_key_id\n      secret-key:\n        from_secret: aws_secret_access_key\n      rebuild: true\n      bucket: drone-cache-bucket\n      region: eu-west-1\n      mount:\n        - 'vendor'\n","url":"https://github.com/meltwater/drone-cache"},{"id":"captains-log","name":"Captains Log","description":"A Drone plugin that helps organize release information in Slack","settings":{"secrets":{"type":"string","defaultValue":"","description":"slack and github secrets","secret":false,"required":false},"github_owner":{"type":"string","defaultValue":"","description":"The owner of the GitHub repository","secret":false,"required":true},"github_repo":{"type":"string","defaultValue":"","description":"Target repository name","secret":false,"required":true},"jira_team_domain":{"type":"string","defaultValue":"","description":"namespace of Jira workspace (e.g. `jira.myteamnamespace.com`)","secret":false,"required":true},"github_tag_id":{"type":"string","defaultValue":"","description":"regex to match on specific tags","secret":false,"required":false},"slack_channel":{"type":"string","defaultValue":"","description":"when using the API, you should use slack_channel to specify which room you'd like to post to. When using SLACK_URL you should not specify the room (i.e. slack_channel) because the room is already a part of the webhook.","secret":false,"required":false},"teams":{"type":"array","defaultValue":"","description":"a list of teams which allows you to organize the output of Captains Log into meaningful chunks.","secret":false,"required":false},"enterprise_host":{"type":"string","defaultValue":"","description":"if you use Enterprise Github, this is where you would supply the custom domain.","secret":false,"required":false}},"image":"target/captains-log:1","example":"kind: pipeline\nname: default\n\nsteps:\n- name: my-release-log-step\n  image: target/captains-log:1\n  settings:\n    secrets: [ SLACK_TOKEN, SLACK_URL, GITHUB_TOKEN ] \n    github_owner: target\n    github_repo: captains-log\n    jira_team_domain: myteamnamespace\n","url":"https://github.com/target/captains-log"},{"id":"chef-supermarket","name":"Chef Supermarket","description":"The Chef Supermarket plugin can publish cookbooks to Supermarket (internal or public).","settings":{"user":{"type":"string","defaultValue":"","description":"connects as this user","secret":false,"required":false},"private_key":{"type":"string","defaultValue":"","description":"private key contents to auth to server with","secret":false,"required":false},"server":{"type":"string","defaultValue":"https://supermarket.chef.io","description":"Supermarket server to connect to","secret":false,"required":false},"ssl_verify":{"type":"boolean","defaultValue":true,"description":"Enable/Disable SSL verify","secret":false,"required":false}},"image":"jmccann/drone-chef-supermarket:1","example":"kind: pipeline\nname: default\n\nsteps:\n- name: chef_supermarket\n  image: jmccann/drone-chef-supermarket:1\n","url":"https://github.com/jmccann/drone-chef-supermarket"},{"id":"circleci","name":"CircleCI","description":"The CircleCI plugin allows you to trigger builds automatically.","settings":{"token":{"type":"string","defaultValue":"","description":"CircleCI user token.","secret":true,"required":false},"user":{"type":"string","defaultValue":"","description":"CircleCI user.","secret":true,"required":false},"repo":{"type":"string","defaultValue":"","description":"CircleCI repo.","secret":false,"required":false},"branch":{"type":"string","defaultValue":"default","description":"CircleCI branch.","secret":false,"required":false}},"image":"wesleimp/drone-circleci","example":"kind: pipeline\nname: default\n\nsteps:\n- name: trigger circle-ci builds\n  image: wesleimp/drone-circleci\n  settings:\n    token: xxxxxxxxxx\n    user: octocat\n    repo: hello-world\n    branch: master\n","url":"https://github.com/wesleimp/drone-circleci"},{"id":"clair","name":"Clair","description":"The Clair plugin submits your docker image to your Clair server to scan your docker image for security vulnerabilities.","settings":{"url":{"type":"string","defaultValue":"","description":"Clair server URL","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"Docker Registry username to download the `scan_image` from","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"Docker Registry password to download the `scan_image` from","secret":true,"required":false},"scan_image":{"type":"string","defaultValue":"","description":"The docker image to scan.  Supports Docker Hub or private repos.","secret":false,"required":false}},"image":"jmccann/drone-clair:1","example":"kind: pipeline\nname: default\n\nsteps:\n- name: clair\n  image: jmccann/drone-clair:1\n  settings:\n    url: http://clair.company.com\n    username: johndoe\n    password: mysecret\n    scan_image: python:2.7\n","url":"https://github.com/jmccann/drone-clair"},{"id":"cloudflare-caching","name":"Cloudflare Caching","description":"Our Drone plugin enables the ability for your pipeline to interface with Cloudflare's API to purge cache.","settings":{"api_token":{"type":"string","defaultValue":"","description":"Cloudflare API token.","secret":true,"required":true},"zone_identifier":{"type":"string","defaultValue":"","description":"Cloudflare zone id.","secret":false,"required":true},"action":{"type":"string","defaultValue":"purge_everything","description":"What type of cache purge, options are purge_everything, purge_hosts, purge_files, purge_tags.","secret":false,"required":true},"list":{"type":"array","defaultValue":"","description":"List of values, could be valid hosts, tags, or files depending on action parameter value.","secret":false,"required":false}},"image":"jetrails/drone-cloudflare-caching","example":"kind: pipeline\nname: default\n\nsteps:\n- name: cloudflare\n  image: jetrails/drone-cloudflare-caching\n  settings:\n    api_token:\n      from_secret: cloudflare_token\n    zone_identifier:\n      from_secret: cloudflare_zone_identifier\n    action: purge_everything\n","url":"https://github.com/jetrails/drone-cloudflare-caching"},{"id":"cloudflare-dns","name":"Cloudflare DNS","description":"Our Drone plugin enables the ability for your pipeline to interface with Cloudflare's API to create/update/delete DNS records.","settings":{"api_token":{"type":"string","defaultValue":"","description":"Cloudflare API token.","secret":true,"required":true},"zone_identifier":{"type":"string","defaultValue":"","description":"Cloudflare zone id.","secret":false,"required":true},"action":{"type":"string","defaultValue":"","description":"What type of action, options are set, unset.","secret":false,"required":false},"record_type":{"type":"string","defaultValue":"","description":"Type of DNS record, examples include A, CNAME, NS, etc.","secret":false,"required":true},"record_name":{"type":"string","defaultValue":"","description":"Name of DNS record.","secret":false,"required":true},"record_content":{"type":"string","defaultValue":"","description":"Value of DNS record.","secret":false,"required":false},"record_proxied":{"type":"boolean","defaultValue":true,"description":"Proxy record through cloudflare.","secret":false,"required":false},"record_ttl":{"type":"number","defaultValue":1,"description":"Time to live value in seconds for DNS record.","secret":false,"required":false},"record_priority":{"type":"number","defaultValue":1,"description":"Priority value for DNS record.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"Display debug data.","secret":false,"required":false}},"image":"jetrails/drone-cloudflare-dns","example":"kind: pipeline\nname: default\n\nsteps:\n-   name: cloudflare\n    image: jetrails/drone-cloudflare-dns\n    settings:\n        api_token:\n            from_secret: cloudflare_token\n        zone_identifier:\n            from_secret: cloudflare_zone_identifier\n        debug: false\n        action: set\n        record_type: A\n        record_name: test.example.com\n        record_content: 127.0.0.1\n        record_proxied: false\n","url":"https://github.com/jetrails/drone-cloudflare-dns"},{"id":"cloudformation","name":"AWS CloudFormation","description":"The CloudFormation plugin can be used to create/update or delete stacks, and to validate templates.","settings":{"mode":{"type":"string","defaultValue":"createOrUpdate","description":"Mode to run the plugin, options are createOrUpdate, create, delete, validate.","secret":false,"required":false},"stackname":{"type":"string","defaultValue":"","description":"the name of the CloudFormation stack. Required for all but validate mode.","secret":false,"required":false},"template":{"type":"string","defaultValue":"","description":"the path to the CloudFormation template. Required for all but delete mode.","secret":false,"required":false},"params":{"type":"object","defaultValue":"","description":"object of parameters to feed into the template. Not needed for validate and delete modes.","secret":false,"required":false},"region":{"type":"string","defaultValue":"eu-west-1","description":"the AWS region to deploy to.","secret":false,"required":false},"access_key":{"type":"string","defaultValue":"","description":"the AWS access key.","secret":true,"required":false},"secret_key":{"type":"string","defaultValue":"","description":"the AWS secret key.","secret":true,"required":false},"batch":{"type":"array","defaultValue":"","description":"an array of configurations.","secret":false,"required":false},"parallel":{"type":"boolean","defaultValue":false,"description":"whether to run the batch in parallel.","secret":false,"required":false}},"image":"robertstettner/drone-cloudformation","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: robertstettner/drone-cloudformation\n  settings:\n    stackname: my-awesome-stack\n    template: templates/stack.yml\n    params:\n      Version: 123\n      Environment: staging\n","url":"https://github.com/robertstettner/drone-cloudformation"},{"id":"cloudfoundry","name":"Cloud Foundry","description":"The Cloud Foundry plugin can be used to deploy files and/or services to Cloud Foundry.","settings":{"CF_API":{"type":"string","defaultValue":"","description":"Target API.","secret":true,"required":false},"CF_USER":{"type":"string","defaultValue":"","description":"CF username.","secret":true,"required":false},"CF_PASSWORD":{"type":"string","defaultValue":"","description":"CF password.","secret":true,"required":false},"CF_ORG":{"type":"string","defaultValue":"","description":"target CF org.","secret":true,"required":false},"CF_SPACE":{"type":"string","defaultValue":"","description":"target CF space.","secret":true,"required":false},"api":{"type":"string","defaultValue":"","description":"Target API.","secret":false,"required":false},"org":{"type":"string","defaultValue":"","description":"Target org.","secret":false,"required":false},"space":{"type":"string","defaultValue":"","description":"Target space.","secret":false,"required":false},"user":{"type":"string","defaultValue":"","description":"Auth username.","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"Auth password.","secret":true,"required":false},"name":{"type":"string","defaultValue":"","description":"Override application name.","secret":false,"required":false},"buildpack":{"type":"string","defaultValue":"","description":"Custom buildpack.","secret":false,"required":false},"command":{"type":"string","defaultValue":"","description":"Startup command.","secret":false,"required":false},"domain":{"type":"string","defaultValue":"","description":"Domain.","secret":false,"required":false},"manifest":{"type":"string","defaultValue":"","description":"Path to manifest.","secret":false,"required":false},"docker_image":{"type":"string","defaultValue":"","description":"Image name.","secret":false,"required":false},"instances":{"type":"number","defaultValue":"","description":"Number of instances.","secret":false,"required":false},"disk":{"type":"string","defaultValue":"","description":"Disk limit e.g. 256M.","secret":false,"required":false},"memory":{"type":"string","defaultValue":"","description":"Memory limit e.g. 256M.","secret":false,"required":false},"hostname":{"type":"string","defaultValue":"","description":"Hostname.","secret":false,"required":false},"path":{"type":"string","defaultValue":"","description":"App path.","secret":false,"required":false},"stack":{"type":"string","defaultValue":"","description":"Stack to use.","secret":false,"required":false},"timeout":{"type":"number","defaultValue":"","description":"App start timeout.","secret":false,"required":false},"health_check_type":{"type":"string","defaultValue":"","description":"Application health check type e.g. port.","secret":false,"required":false},"route_path":{"type":"string","defaultValue":"","description":"Route path.","secret":false,"required":false},"no_hostname":{"type":"boolean","defaultValue":false,"description":"Map the route domain to this app.","secret":false,"required":false},"no_manifest":{"type":"boolean","defaultValue":false,"description":"Ignore manifest file.","secret":false,"required":false},"no_route":{"type":"boolean","defaultValue":false,"description":"Do not map a route to this app and remove routes from previous pushes of this app.","secret":false,"required":false},"no_start":{"type":"boolean","defaultValue":false,"description":"Do not start an app after pushing.","secret":false,"required":false},"random_route":{"type":"boolean","defaultValue":false,"description":"Generate a random route for this app.","secret":false,"required":false},"skip_ssl":{"type":"boolean","defaultValue":false,"description":"Skip verification of the API endpoint. Not recommended!","secret":false,"required":false}},"image":"cheslip/drone-cloudfoundry","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: cheslip/drone-cloudfoundry\n  settings:\n    api: api.run.pivotal.io\n    org: pivotal\n    space: production\n","url":"https://github.com/Comcast/drone-cloudfoundry"},{"id":"codacy","name":"Codacy","description":"This plugin can upload coverage reports to Codacy, currently it's limited to Golang coverage reports.","settings":{"token":{"type":"string","defaultValue":"","description":"Codacy authentication token.","secret":true,"required":true},"pattern":{"type":"string","defaultValue":"**/*.out","description":"Coverage search pattern.","secret":false,"required":false}},"image":"plugins/codacy","example":"kind: pipeline\nname: default\n\nsteps:\n- name: codacy\n  image: plugins/codacy\n  settings:\n    token: your-codacy-token\n","url":"https://github.com/drone-plugins/drone-codacy"},{"id":"codecov","name":"Codecov","description":"This plugin allows for pushing test coverage results to Codecov.","settings":{"token":{"type":"string","defaultValue":"","description":"Sets the private repository token.","secret":true,"required":true},"files":{"type":"array","defaultValue":"","description":"list of target files to upload.","secret":false,"required":false},"flags":{"type":"array","defaultValue":"","description":"flag the upload to group coverage metrics.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"enable debug mode.","secret":false,"required":false}},"image":"robertstettner/drone-codecov","example":"kind: pipeline\nname: default\n\nsteps:\n- name: codecov\n  image: robertstettner/drone-codecov\n  settings:\n    token: your-codacy-token\n","url":"https://github.com/robertstettner/drone-codecov"},{"id":"coveralls","name":"Coveralls","description":"This plugin can upload coverage reports to Coveralls.","settings":{"files":{"type":"array","defaultValue":"","description":"List of files to upload.","secret":false,"required":true},"token":{"type":"string","defaultValue":"","description":"if you have not set environment COVERALLS_REPO_TOKEN, you should set the private repository token.","secret":true,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"if you want to debug, set it to true.","secret":false,"required":false}},"image":"lizheming/drone-coveralls","example":"kind: pipeline\nname: default\n\nsteps:\n- name: coveralls\n  image: lizheming/drone-coveralls\n  settings:\n    token:\n      from_secret: coveralls_token\n    files:\n    - ./lcov.info\n","url":"https://github.com/lizheming/drone-coveralls"},{"id":"crowdin","name":"Crowdin","description":"The Crowdin plugin allows you to submit translation files to Crowdin.","settings":{"project_identifier":{"type":"string","defaultValue":"","description":"Identifier provided by Crowdin.","secret":false,"required":true},"project_key":{"type":"string","defaultValue":"","description":"API key provided by Crowdin.","secret":true,"required":true},"files":{"type":"object","defaultValue":"","description":"Map of translatable files with the Crowdin file name as key and the real filepath as value. The plugin will not upload any files if this list is empty.","secret":false,"required":true},"ignore_branch":{"type":"boolean","defaultValue":false,"description":"It will send the Drone branch to Crowdin if it is false.","secret":false,"required":false},"download":{"type":"boolean","defaultValue":true,"description":"Downloads translated files from Crowdin if it is true.","secret":false,"required":false},"export_dir":{"type":"string","defaultValue":"","description":"Export directory of the translated strings.","secret":false,"required":false},"languages":{"type":"array","defaultValue":"all","description":"Languages which should be downloaded/exported from Crowdin.","secret":false,"required":false}},"image":"jonasfranz/crowdin","example":"kind: pipeline\nname: default\n\nsteps:\n- name: crowdin\n  image: jonasfranz/crowdin\n  settings:\n    project_identifier: example\n    project_key: 1bc29b36f623ba82aaf6724fd3b16718\n    files:\n      example: options/example.ini\n      example2: options/example2.ini\n","url":"https://github.com/JonasFranzDEV/drone-crowdin"},{"id":"datadog","name":"Datadog","description":"The plugin can be used to send events and metrics to Datadog from a drone pipeline.","settings":{"api_key":{"type":"string","defaultValue":"","description":"Datadog API key.","secret":true,"required":false},"dry_run":{"type":"boolean","defaultValue":false,"description":"When set to true, the plugin only computes metrics and events without sending anything to the Datadog intake. When the plugin runs in dry mode, it doesn't require an api_key to be set, useful for testing.","secret":false,"required":false},"metrics":{"type":"array","defaultValue":[],"description":"A list of metrics to be sent to Datadog. A metric must have a name and a value; type defaults to gauge; tags and hostname are optional.","secret":false,"required":false},"events":{"type":"array","defaultValue":[],"description":"A list of events to be sent to Datadog. An event must have a title and a text; alert_type defaults to info.","secret":false,"required":false}},"image":"masci/drone-datadog","example":"kind: pipeline\nname: default\n\nsteps:\n- name: count-pipeline\n  image: masci/drone-datadog\n  settings:\n    api_key:\n      from_secret: datadog_api_key\n    metrics:\n      - type: \"count\"\n        name: \"masci.pipelines.count\"\n        value: 1.0\n        tags: [\"project:${DRONE_REPO_NAME}\", \"branch:${DRONE_BRANCH}\"]\n","url":"https://github.com/masci/drone-datadog"},{"id":"dco","name":"DCO","description":"The DCO plugin enforces the Developer Certificate of Origin.","settings":{"debug":{"type":"boolean","defaultValue":false,"description":"whether to enable debug mode.","secret":false,"required":false}},"image":"algernon/drone-plugin-dco","example":"kind: pipeline\nname: default\n\nsteps:\n- name: dco\n  image: algernon/drone-plugin-dco\n","url":"https://git.madhouse-project.org/algernon/drone-plugin-dco"},{"id":"deta","name":"Deta","description":"The Deta plugin deploy your build to deta.sh(https://deta.sh).\n","settings":{"access_token":{"type":"string","defaultValue":"","description":"Deta access token. \nHow to get Deta access token? https://docs.deta.sh/docs/cli/auth#deta-access-tokens\n","secret":true,"required":false},"name":{"type":"string","defaultValue":"","description":"Deta micro name","secret":false,"required":true},"project":{"type":"string","defaultValue":"default","description":"Deta project name","secret":false,"required":false},"project_dir":{"type":"string","defaultValue":".","description":"irectory of the project","secret":false,"required":false}},"image":"lizheming/drone-deta","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deta\n  image: lizheming/drone-deta\n  settings:\n    access_token:\n      from_secret: deta_access_token\n    name: test-name\n    project: default\n","url":"https://github.com/lizheming/drone-deta"},{"id":"dingtalk-message","name":"DingTalk","description":"The DingTalk can be used to send a message by DingTalk group robot.","settings":{"token":{"type":"string","defaultValue":"","description":"you can get the access token when you add a bot in a group.","secret":true,"required":true},"type":{"type":"string","defaultValue":"","description":"dingtalk message type, markdown is the best type now.","secret":false,"required":true},"message_color":{"type":"boolean","defaultValue":false,"description":"color the title and content for easier identification.","secret":false,"required":false},"message_pic":{"type":"boolean","defaultValue":false,"description":"insert a picture into a message to make the content richer.","secret":false,"required":false},"sha_link":{"type":"boolean","defaultValue":false,"description":"sha as a link to click to the source code page.","secret":false,"required":false}},"image":"lddsb/drone-dingtalk-message","example":"kind: pipeline\nname: default\n\nsteps:\n- name: dingtalk\n  image: lddsb/drone-dingtalk-message\n  settings:\n    token: your-dingtalk-robot-access-token\n    type: markdown\n","url":"https://github.com/lddsb/drone-dingtalk-message"},{"id":"discord","name":"Discord","description":"The discord plugin posts build status messages to discord channel.","settings":{"webhook_id":{"type":"string","defaultValue":"","description":"discord webhook id.","secret":true,"required":true},"webhook_token":{"type":"string","defaultValue":"","description":"discord webhook token.","secret":true,"required":true},"avatar_url":{"type":"string","defaultValue":"","description":"override the default avatar of the webhook.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"override the default username of the webhook.","secret":false,"required":false},"tts":{"type":"boolean","defaultValue":false,"description":"enable text-to-speech.","secret":false,"required":false},"message":{"type":"string","defaultValue":"","description":"the message contents (up to 2000 characters).","secret":false,"required":false}},"image":"appleboy/drone-discord","example":"kind: pipeline\nname: default\n\nsteps:\n- name: discord notification\n  image: appleboy/drone-discord\n  settings:\n    webhook_id: xxxxxxxxxx\n    webhook_token: xxxxxxxxxx\n","url":"https://github.com/appleboy/drone-discord"},{"id":"docker","name":"Docker","description":"The Docker plugin can be used to build and publish images to the Docker\nregistry.\n","settings":{"registry":{"type":"string","defaultValue":"","description":"authenticates to this registry","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"authenticates with this username","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"authenticates with this password","secret":true,"required":false},"repo":{"type":"string","defaultValue":"","description":"repository name for the image","secret":false,"required":false},"tags":{"type":"string","defaultValue":"","description":"repository tag for the image","secret":false,"required":false},"secret":{"type":"string","defaultValue":"","description":"Use buildkit to pass secrets to the dockerbuild. Eg `id=mysecret,src=secret-file`","secret":false,"required":false},"dockerfile":{"type":"string","defaultValue":"Dockerfile","description":"dockerfile to be used","secret":false,"required":false},"dry_run":{"type":"string","defaultValue":"","description":"boolean if the docker image should be pushed at the end","secret":false,"required":false},"purge":{"type":"boolean","defaultValue":false,"description":"boolean if cleanup of the docker image should be done at the end","secret":false,"required":false},"context":{"type":"string","defaultValue":"","description":"the context path to use, defaults to root of the git repo","secret":false,"required":false},"target":{"type":"string","defaultValue":"","description":"the build target to use, must be defined in the docker file","secret":false,"required":false},"force_tag":{"type":"boolean","defaultValue":false,"description":"replace existing matched image tags","secret":false,"required":false},"insecure":{"type":"boolean","defaultValue":false,"description":"enable insecure communication to this registry","secret":false,"required":false},"mirror":{"type":"string","defaultValue":"","description":"use a mirror registry instead of pulling images directly from the central Hub","secret":false,"required":false},"bip":{"type":"boolean","defaultValue":false,"description":"use for pass bridge ip","secret":false,"required":false},"custom_dns":{"type":"string","defaultValue":"","description":"set custom dns servers for the container","secret":false,"required":false},"custom_dns_search":{"type":"string","defaultValue":"","description":"docker daemon dns search domains","secret":false,"required":false},"storage_driver":{"type":"string","defaultValue":"","description":"supports `aufs`, `overlay` or `vfs` drivers","secret":false,"required":false},"storage_path":{"type":"string","defaultValue":"","description":"docker daemon storage path","secret":false,"required":false},"build_args":{"type":"string","defaultValue":"","description":"pass custom arguments to docker build","secret":false,"required":false},"build_args_from_env":{"type":"string","defaultValue":"","description":"pass the envvars as custom arguments to docker build","secret":false,"required":false},"auto_tag":{"type":"boolean","defaultValue":false,"description":"generate tag names automatically based on git branch and git tag","secret":false,"required":false},"auto_tag_suffix":{"type":"string","defaultValue":"","description":"generate tag names with this suffix","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"launch the docker daemon in verbose debug mode","secret":false,"required":false},"launch_debug":{"type":"boolean","defaultValue":false,"description":"launch the docker daemon in verbose debug mode","secret":false,"required":false},"mtu":{"type":"string","defaultValue":"","description":"docker daemon custom mtu setting","secret":false,"required":false},"ipv6":{"type":"string","defaultValue":"","description":"docker daemon IPv6 networking","secret":false,"required":false},"experimental":{"type":"boolean","defaultValue":false,"description":"docker daemon Experimental mode","secret":false,"required":false},"daemon_off":{"type":"boolean","defaultValue":false,"description":"don't start the docker daemon","secret":false,"required":false},"cache_from":{"type":"string","defaultValue":"","description":"images to consider as cache sources","secret":false,"required":false},"squash":{"type":"boolean","defaultValue":false,"description":"squash the layers at build time","secret":false,"required":false},"pull_image":{"type":"boolean","defaultValue":false,"description":"force pull base image at build time","secret":false,"required":false},"compress":{"type":"boolean","defaultValue":false,"description":"compress the build context using gzip","secret":false,"required":false},"custom_labels":{"type":"string","defaultValue":"","description":"additional k=v labels","secret":false,"required":false},"label_schema":{"type":"string","defaultValue":"","description":"label-schema labels","secret":false,"required":false},"email":{"type":"string","defaultValue":"","description":"docker email","secret":false,"required":false},"no_cache":{"type":"string","defaultValue":"","description":"do not use cached intermediate containers","secret":false,"required":false},"add_host":{"type":"string","defaultValue":"","description":"additional host:IP mapping","secret":false,"required":false}},"image":"plugins/docker","example":"kind: pipeline\nname: default\n\nsteps:\n- name: docker  \n  image: plugins/docker\n  settings:\n    username: kevinbacon\n    password: pa55word\n    repo: foo/bar\n    tags: latest\n","url":"https://github.com/drone-plugins/drone-docker"},{"id":"doumark","name":"Doumark","description":"Drone plugin for Douban(https://douban.com) movie/book/music marked data sync automatically.\n","settings":{"id":{"type":"string","defaultValue":"","description":"Douban ID","secret":false,"required":true},"type":{"type":"string","defaultValue":"movie","description":"Douban data Type, enum value: movie, book, music\n","secret":false,"required":false},"format":{"type":"string","defaultValue":"csv","description":"Douban data store format, enum value: csv, json, notion\n","secret":false,"required":false},"dir":{"type":"string","defaultValue":"","description":"Target where douban data sync to. It's a file path for csv and json format, and a notion database id for notion format.","secret":false,"required":true},"notion_token":{"type":"string","defaultValue":"","description":"Notion Integration Token","secret":true,"required":false}},"image":"lizheming/drone-doumark","example":"kind: pipeline\ntype: docker\nname: default\n\nclone:\n  disable: true\n\nsteps:\n- name: douban\n  image: lizheming/drone-doumark\n  settings:\n    id: lizheming\n    type: movie\n    format: notion\n    notion_token: xxxxxx\n    dir: xxxxxx\n","url":"https://github.com/lizheming/drone-doumark"},{"id":"download","name":"Download","description":"Use the Download plugin to download archives required for your builds, it also integrates a secure way to inject basic authentication credentials and checking by md5 or sha256 checksums.","settings":{"source":{"type":"string","defaultValue":"","description":"The source URL for the download.","secret":false,"required":true},"destination":{"type":"string","defaultValue":"","description":"The destination path for the download.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"The username for basic auth.","secret":true,"required":false},"password":{"type":"string","defaultValue":"","description":"The password for basic auth.","secret":true,"required":false},"skip_verify":{"type":"boolean","defaultValue":false,"description":"Skip SSL verification.","secret":false,"required":false},"md5":{"type":"string","defaultValue":"","description":"The md5 checksum.","secret":false,"required":false},"sha256":{"type":"string","defaultValue":"","description":"The sha256 checksum.","secret":false,"required":false}},"image":"plugins/download","example":"kind: pipeline\nname: default\n\nsteps:\n- name: download  \n  image: plugins/download\n  settings:\n    source: https://github.com/drone/drone-cli/releases/download/v0.8.5/drone_linux_amd64.tar.gz\n","url":"https://github.com/drone-plugins/drone-download"},{"id":"downstream","name":"Downstream Build","description":"Use this plugin to trigger builds for a list of downstream repositories. This","settings":{"token":{"type":"string","defaultValue":"","description":"drone server auth token.","secret":true,"required":true},"server":{"type":"string","defaultValue":"","description":"drone server url.","secret":false,"required":true},"repositories":{"type":"array","defaultValue":[],"description":"trigger builds for the repository list, you can mention branch using @.","secret":false,"required":true},"fork":{"type":"boolean","defaultValue":false,"description":"trigger new build numbers if true, else rebuild.","secret":false,"required":false},"wait":{"type":"boolean","defaultValue":false,"description":"wait for any currently running builds to finish if true, else fails.","secret":false,"required":false},"timeout":{"type":"number","defaultValue":60,"description":"how long to wait on any currently running builds.","secret":false,"required":false},"params":{"type":"array","defaultValue":[],"description":"supports params in KEY=value format as well as loading of params from godotenv files.","secret":false,"required":false},"deploy":{"type":"string","defaultValue":"","description":"Trigger a deployment (promote build), value is the environment/target for the new build.","secret":false,"required":false},"last_successful":{"type":"boolean","defaultValue":false,"description":"Trigger the last successful build for the branch specified in repositories.","secret":false,"required":false}},"image":"plugins/downstream","example":"kind: pipeline\nname: default\n\nsteps:\n- name: trigger  \n  image: plugins/downstream\n  settings:\n    server: https://drone.example.com\n    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n    fork: true\n    repositories:\n      - octocat/Hello-World\n      - octocat/Spoon-Knife\n","url":"https://github.com/drone-plugins/drone-downstream"},{"id":"dron8s","name":"Dron8s","description":"Yet another Kubernetes plugin for Drone using dynamic Server Side Apply to achieve `kubectl apply -f multi-configs.yaml` parity for your CI-CD pipelines.","settings":{"yaml":{"type":"string","defaultValue":"","description":"Yaml containing configs","secret":false,"required":true},"kubeconfig":{"type":"string","defaultValue":"","description":"Needed for out-of-cluster use. If not present plugin will default to in-cluster configuration. You can find kubeconfig under ~/.kube/config","secret":false,"required":false}},"image":"ghcr.io/bh90210/dron8s:latest","example":"kind: pipeline\ntype: docker\nname: dron8s-out-of-cluster-example\n\nsteps:\n- name: dron8s\n  image: ghcr.io/bh90210/dron8s:latest\n  settings:\n    yaml: ./config.yaml\n    kubeconfig:\n      from_secret: kubeconfig\n","url":"https://github.com/bh90210/dron8s"},{"id":"ecr","name":"AWS ECR","description":"The ECR plugin can be used to build and publish images to the Amazon ECR registry.","settings":{"access_key":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":true},"secret_key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":true},"create_repository":{"type":"boolean","defaultValue":false,"description":"Create repository if it does not exist.","secret":false,"required":false},"region":{"type":"string","defaultValue":"us-east-1","description":"AWS region.","secret":false,"required":false},"repo":{"type":"string","defaultValue":"","description":"repository name for the image.","secret":false,"required":true},"lifecycle_policy":{"type":"string","defaultValue":"","description":"filename of ecr lifecycle json policy.","secret":false,"required":false},"repository_policy":{"type":"string","defaultValue":"","description":"filename of ecr repository json policy.","secret":false,"required":false},"tags":{"type":"array","defaultValue":"latest","description":"repository tag for the image, defaults to latest.","secret":false,"required":false},"dockerfile":{"type":"string","defaultValue":"Dockerfile","description":"filename of dockerfile.","secret":false,"required":false},"auth":{"type":"string","defaultValue":"","description":"auth token for the registry.","secret":true,"required":false},"context":{"type":"string","defaultValue":"rot of the git repo","description":"context directory for the dockerfile.","secret":false,"required":false},"force_tag":{"type":"boolean","defaultValue":false,"description":"replace existing matched image tags.","secret":false,"required":false},"insecure":{"type":"boolean","defaultValue":false,"description":"enable insecure communication to this registry.","secret":false,"required":false},"mirror":{"type":"string","defaultValue":"","description":"use a mirror registry instead of pulling images directly from the central Hub.","secret":false,"required":false},"bip":{"type":"boolean","defaultValue":false,"description":"use for pass bridge ip.","secret":false,"required":false},"custom_dns":{"type":"string","defaultValue":"","description":"set custom dns servers for the container.","secret":false,"required":false},"storage_driver":{"type":"string","defaultValue":"","description":"supports aufs, overlay or vfs drivers.","secret":false,"required":false},"build_args":{"type":"array","defaultValue":[],"description":"custom arguments passed to docker build.","secret":false,"required":false},"scan_on_push":{"type":"boolean","defaultValue":false,"description":"boolean of whether to enable automatic ECR images vulnerabilities scanning for repository if it was created with create_repository=true.","secret":false,"required":false}},"image":"plugins/ecr","example":"kind: pipeline\nname: default\n\nsteps:\n- name: publish  \n  image: plugins/ecr\n  settings:\n    access_key: a50d28f4dd477bc184fbd10b376de753\n    secret_key: bc5785d3ece6a9cdefa42eb99b58986f9095ff1c\n    repo: bar\n    registry: <account_id>.dkr.ecr.us-east-1.amazonaws.com\n","url":"https://github.com/drone-plugins/drone-docker"},{"id":"ecs","name":"AWS ECS","description":"The ECS plugin can be used to deploy a Docker image to an ECS environment.","settings":{"access_key":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":false},"secret_key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":false},"service":{"type":"string","defaultValue":"","description":"ecs service on that environment to upgrade.","secret":false,"required":false},"region":{"type":"string","defaultValue":"","description":"AWS region.","secret":false,"required":false},"family":{"type":"string","defaultValue":"","description":"ECS task.","secret":false,"required":false},"image_name":{"type":"string","defaultValue":"","description":"docker image to use.","secret":false,"required":false},"image_tag":{"type":"string","defaultValue":"","description":"docker image tag to use.","secret":false,"required":false},"environment_variables":{"type":"array","defaultValue":[],"description":"list of environment variables to pass to ecs.","secret":false,"required":false},"port_mappings":{"type":"array","defaultValue":[],"description":"list of port mappings to pass to ecs.","secret":false,"required":false},"memory":{"type":"number","defaultValue":"","description":"memory to assign to the service.","secret":false,"required":false}},"image":"pelotech/drone-ecs","example":"kind: pipeline\nname: default\n\nsteps:\n- name: ecs\n  image: pelotech/drone-ecs\n  settings:\n    access_key: superaccesskey\n    secret_key: supersecretkey\n    service: service1\n    region: us-west-2\n    family: my-ecs-task\n    image_name: namespace/repo\n    image_tag: latest\n    environment_variables:\n      - DATABASE_URI=database uri\n    port_mappings:\n      - 80 9000\n    memory: 128\n","url":"https://github.com/josmo/drone-ecs"},{"id":"ecs-deploy","name":"AWS ECS Deploy","description":"This plugin allows updating an ECS service. The plugin is a wrapper for ecs-deploy, this bash works by taking the current task definition of a service and just changing the image so that all the configuration stays the same.","settings":{"aws_access_key_id":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":false},"aws_secret_access_key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":false},"aws_region":{"type":"string","defaultValue":"us-east-1","description":"AWS region.","secret":false,"required":false},"cluster":{"type":"string","defaultValue":"","description":"ECS cluster.","secret":false,"required":false},"service":{"type":"string","defaultValue":"","description":"Name of service to deploy.","secret":false,"required":false},"timeout":{"type":"number","defaultValue":300,"description":"Script monitors ECS Service for new task definition to be running.","secret":false,"required":false},"image_name":{"type":"string","defaultValue":"","description":"Name of Docker image to run, e.g. repo/image:latest.","secret":false,"required":false},"max":{"type":"number","defaultValue":200,"description":"The upper limit on the number of running tasks during a deployment.","secret":false,"required":false},"min":{"type":"number","defaultValue":100,"description":"The lower limit on the number of running tasks during a deployment.","secret":false,"required":false}},"image":"joshdvir/drone-ecs-deploy","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: joshdvir/drone-ecs-deploy\n  settings:\n    cluster: my-cluster\n    service: my-service\n    image_name: my-image:latest\n    aws_region: us-east-1\n","url":"https://github.com/joshdvir/drone-ecs-deploy"},{"id":"elastic-beanstalk","name":"AWS Elastic Beanstalk","description":"The Elastic Beanstalk plugin can be used to deploy an app to a Beanstalk environment.","settings":{"access_key":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":false},"secret_key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":false},"region":{"type":"string","defaultValue":"","description":"AWS region.","secret":false,"required":false},"version_label":{"type":"string","defaultValue":"","description":"label to identify this version.","secret":false,"required":false},"description":{"type":"string","defaultValue":"","description":"A description about the deployment.","secret":false,"required":false},"auto_create":{"type":"boolean","defaultValue":false,"description":"Automatically create the application.","secret":false,"required":false},"process":{"type":"boolean","defaultValue":false,"description":"Preprocess and validate the manifest.","secret":false,"required":false},"bucket_name":{"type":"string","defaultValue":"","description":"Bucket for S3 source bundle.","secret":false,"required":false},"bucket_key":{"type":"string","defaultValue":"","description":"Key for S3 source bundle.","secret":false,"required":false},"environment_update":{"type":"boolean","defaultValue":false,"description":"Flag whether to update ElasticBeansTalk environment with the new version.","secret":false,"required":false},"environment_name":{"type":"string","defaultValue":"","description":"Environment Name, if environment_update true.","secret":false,"required":false}},"image":"pelotech/drone-elastic-beanstalk","example":"kind: pipeline\nname: default\n\nsteps:\n- name: beanstalk\n  image: pelotech/drone-elastic-beanstalk\n  settings:\n    access_key: 970d28f4dd477bc184fbd10b376de753\n    secret_key: 9c5785d3ece6a9cdefa42eb99b58986f9095ff1c\n    region: us-east-1\n    version_label: v1\n    description: Deployed with DroneCI\n    auto_create: true\n    bucket_name: my-bucket-name\n    bucket_key: 970d28f4dd477bc184fbd10b376de753\n","url":"https://github.com/josmo/drone-elastic-beanstalk"},{"id":"email","name":"Email","description":"The email plugin can be used to notify people of a build result.","settings":{"from":{"type":"string","defaultValue":"","description":"The email address to send the notification from.","secret":false,"required":false},"host":{"type":"string","defaultValue":"","description":"SMTP server host.","secret":false,"required":false},"port":{"type":"number","defaultValue":587,"description":"SMTP server port.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"SMTP server username.","secret":true,"required":false},"password":{"type":"string","defaultValue":"","description":"SMTP server password.","secret":true,"required":false},"skip_verify":{"type":"boolean","defaultValue":false,"description":"Skip cert verification.","secret":false,"required":false},"recipients":{"type":"array","defaultValue":[],"description":"List of recipients to send this mail to (besides the commit author).","secret":false,"required":false},"recipients_file":{"type":"string","defaultValue":"","description":"File containing a list of recipients to send this mail to (besides the commit author).","secret":false,"required":false},"recipients_only":{"type":"boolean","defaultValue":false,"description":"Do not send mails to the commit author, but only to recipients.","secret":false,"required":false},"subject":{"type":"string","defaultValue":"","description":"The subject line template (handlebars template).","secret":false,"required":false},"body":{"type":"string","defaultValue":"","description":"The email body template (handlebars template). This can be an inline template, or a URL (file:/// allowed)","secret":false,"required":false},"attachment":{"type":"string","defaultValue":"","description":"An optional file to attach to the sent mail(s). This can be an absolute path or a path relative to the working directory.","secret":false,"required":false}},"image":"drillster/drone-email","example":"kind: pipeline\nname: default\n\nsteps:\n- name: notify\n  image: drillster/drone-email\n  settings:\n    host: smtp.some-server.com\n    username: foo\n    password: bar\n    from: drone@your-domain.com\n","url":"https://github.com/drillster/drone-email"},{"id":"facebook","name":"Facebook","description":"The Facebook plugin posts build status messages to your account.","settings":{"fb_page_token":{"type":"string","defaultValue":"","description":"Facebook Page Token.","secret":true,"required":false},"fb_verify_token":{"type":"string","defaultValue":"","description":"Facebook Verify Token.","secret":true,"required":false},"app_secret":{"type":"string","defaultValue":"","description":"Facebook App Secret.","secret":true,"required":false},"to":{"type":"string","defaultValue":"","description":"Facebook User ID.","secret":true,"required":false},"message":{"type":"string","defaultValue":"","description":"overwrite the default message template.","secret":false,"required":false},"images":{"type":"array","defaultValue":[],"description":"a valid URL to an image message.","secret":false,"required":false},"videos":{"type":"array","defaultValue":[],"description":"a valid URL to a video message.","secret":false,"required":false},"audios":{"type":"array","defaultValue":[],"description":"a valid URL to an audio message.","secret":false,"required":false},"files":{"type":"array","defaultValue":[],"description":"a valid URL to a file message.","secret":false,"required":false}},"image":"appleboy/drone-facebook","example":"kind: pipeline\nname: default\n\nsteps:\n- name: notify\n  image: appleboy/drone-facebook\n  settings:\n    fb_page_token: xxxxxxxxxx\n    fb_verify_token: xxxxxxxxxx\n    app_secret: xxxxxxxxxx\n    to: facebook_user_id\n","url":"https://github.com/appleboy/drone-facebook"},{"id":"fandogh","name":"Fandogh","description":"This plugin can help you to easy delivery your new docker images to fandogh PaaS.","settings":{"username":{"type":"string","defaultValue":"","description":"Fandogh username.","secret":true,"required":false},"password":{"type":"string","defaultValue":"","description":"Fandogh password.","secret":true,"required":false},"version":{"type":"string","defaultValue":"","description":"version id.","secret":false,"required":false},"registry":{"type":"string","defaultValue":"","description":"registry url.","secret":false,"required":false},"manifest_path":{"type":"string","defaultValue":"","description":"manifest path.","secret":false,"required":false}},"image":"amirbagh75/fandogh-drone:latest","example":"kind: pipeline\nname: default\n\nsteps:\n- name: fandogh\n  image: amirbagh75/fandogh-drone:latest\n  settings:\n    username: \n      from_secret: fandoghuser\n    password: \n      from_secret: fandoghpass\n    version: ${DRONE_COMMIT}\n    registry: \"myregistry.com:5000\" ## optional\n    manifest_path: ./fandogh.yml\n","url":"https://github.com/amirbagh75/fandogh-drone"},{"id":"ftps","name":"FTP(S)","description":"The FTPS plugin can be used to publish artifacts over FTP(S).","settings":{"secrets":{"type":"array","defaultValue":[],"description":"FTP_PASSWORD and FTP_USERNAME.","secret":true,"required":false},"hostname":{"type":"string","defaultValue":"","description":"FTP host including port.","secret":false,"required":false},"clean_dir":{"type":"boolean","defaultValue":false,"description":"Clean the directory before uploading.","secret":false,"required":false},"chmod":{"type":"boolean","defaultValue":true,"description":"if set to true chmod would be executed after file transferred, otherwise no chmod.","secret":false,"required":false},"verify":{"type":"boolean","defaultValue":true,"description":"if set to true the SSL certificate validation is enforced, otherwise no validation.","secret":false,"required":false},"secure":{"type":"boolean","defaultValue":true,"description":"if set to true FTPS is enforced, otherwise plain FTP is used.","secret":false,"required":false},"dest_dir":{"type":"string","defaultValue":"/","description":"where to put the files on the remote server.","secret":false,"required":false},"src_dir":{"type":"string","defaultValue":"./","description":"which local directory should be used for the upload.","secret":false,"required":false},"exclude":{"type":"string","defaultValue":"","description":"egrep like pattern matching to exclude files from uploading.","secret":false,"required":false},"include":{"type":"string","defaultValue":"","description":"egrep like pattern matching to include files for uploading.","secret":false,"required":false}},"image":"cschlosser/drone-ftps","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: cschlosser/drone-ftps\n  settings:\n    hostname: example.com:21\n    secrets: [ ftp_username, ftp_password ]\n","url":"https://github.com/christophschlosser/drone-ftps"},{"id":"gcf","name":"Google Cloud Functions","description":"The GCF plugin can be used to deploy, list, and delete Google Cloud Functions.","settings":{"token":{"type":"string","defaultValue":"","description":"json credentials of the service account to access Google Cloud Functions.","secret":true,"required":false},"action":{"type":"string","defaultValue":"","description":"can be either deploy, delete, or list.","secret":false,"required":false},"project":{"type":"string","defaultValue":"the project of the service account","description":"name of the GCP project.","secret":false,"required":false},"runtime":{"type":"string","defaultValue":"","description":"runtime of the functions to be deployed. Can be specified once or one a per function basis.","secret":false,"required":false},"functions":{"type":"array","defaultValue":[],"description":"list of functions to be deployed, each needs to at least provide a trigger but can also set memory, runtime, and source.","secret":false,"required":false}},"image":"oliver006/drone-gcf","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy-cloud-functions\n  image: oliver006/drone-gcf\n  settings:\n    action: deploy\n    project: myproject\n    runtime: go111\n    functions:\n      - TransferFileToGCS:\n        - trigger: http\n          memory: 2048MB\n      - HandleEvents:\n        - trigger: topic\n          trigger_resource: \"projects/myproject/topics/mytopic\"\n          memory: 512MB\n          runtime: python37\n          source: ./python/src/functions/\n","url":"https://github.com/oliver006/drone-gcf"},{"id":"gcr","name":"Google Container Registry","description":"The GCR plugin can be used to build and publish images to the Google Container Registry.\n","settings":{"registry":{"type":"string","defaultValue":"gcr.io","description":"authenticates to this registry","secret":false,"required":false},"repo":{"type":"string","defaultValue":"","description":"repository name for the image","secret":false,"required":false},"json_key":{"type":"string","defaultValue":"","description":"json key - can be inline or base64 encoded","secret":true,"required":true}},"image":"plugins/gcr","example":"kind: pipeline\nname: default\n\nsteps:\n- name: publish  \n  image: plugins/gcr\n  settings:\n    repo: project/foo\n    tags: latest\n    json_key:\n      from_secret: google_credentials\n","url":"https://github.com/drone-plugins/drone-docker"},{"id":"gcs","name":"Google Cloud Storage","description":"The GCS plugin can be used to publish files and artifacts to Google Cloud Storage.","settings":{"token":{"type":"string","defaultValue":"","description":"credentials to access Google Cloud Storage","required":true,"secret":true},"acl":{"type":"array","defaultValue":[],"description":"a list of access rules applied to the uploaded files, in a form of entity:role","required":false,"secret":false},"source":{"type":"string","defaultValue":"","description":"location of files to upload","required":true,"secret":false},"ignore":{"type":"string","defaultValue":"","description":"skip files matching this pattern, relative to source","required":false,"secret":false},"target":{"type":"string","defaultValue":"","description":"destination to copy files to, including bucket name","required":true,"secret":false},"gzip":{"type":"string","defaultValue":"","description":"files with the specified extensions will be gzipped and uploaded with \"gzip\" Content-Encoding header e.g. js,css,html","required":false,"secret":false},"cache_control":{"type":"string","defaultValue":"","description":"Cache-Control header","required":false,"secret":false},"metadata":{"type":"string","defaultValue":"","description":"an arbitrary dictionary with custom metadata applied to all objects","required":false,"secret":false}},"image":"plugins/gcs","example":"kind: pipeline\nname: default\n\nsteps:\n- name: upload  \n  image: plugins/gcs\n  settings:\n    source: dist\n    target: bucket/dir/\n    ignore: bin/*\n    acl: allUsers:READER,user@domain.com:OWNER\n    gzip: js,css,html\n    cache_control: public,max-age=3600\n    metadata: {\"x-goog-meta-foo\":\"bar\"}\n    token: your-google-token\n","url":"https://github.com/drone-plugins/gcs"},{"id":"gcs-2","name":"Google Cloud Storage","description":"The Google Cloud Storage plugin uploads files and build artifacts to your Google Cloud Storage bucket.","settings":{"bucket":{"type":"string","defaultValue":"","description":"bucket name","required":true,"secret":true},"acl":{"type":"string","defaultValue":"","description":"access to files that are uploaded (private, public)","required":false,"secret":false},"source":{"type":"string","defaultValue":"","description":"source location of the files, using a glob matching pattern","required":true,"secret":false},"target":{"type":"string","defaultValue":"","description":"target location of files in the bucket","required":true,"secret":false},"compress":{"type":"boolean","defaultValue":false,"description":"gzip files before they are uploaded and add a Content-Encoding gzip","required":false,"secret":false},"strip_prefix":{"type":"boolean","defaultValue":false,"description":"strip the prefix from source path","required":false,"secret":false},"exclude":{"type":"string","defaultValue":"","description":"glob exclusion patterns","required":false,"secret":false}},"image":"wyattjoh/drone-gcs","example":"kind: pipeline\nname: default\n\nsteps:\n- name: pipeline  \n  image: wyattjoh/drone-gcs\n  settings:\n    acl: public\n    bucket: \"my-bucket-name\"\n    source: public/**/*\n    strip_prefix: public/\n    target: /target/location\n","url":"https://github.com/wyattjoh/drone-gcs"},{"id":"gcs-cache","name":"Google Cloud Storage Cache","description":"The GCS cache plugin can be used to preserve files and directories between builds.","settings":{"json_key":{"type":"string","defaultValue":"","description":"service account json key.","secret":true,"required":true},"restore":{"type":"boolean","defaultValue":false,"description":"mode to restore the build environment from cache.","secret":false,"required":false},"rebuild":{"type":"boolean","defaultValue":false,"description":"mode to rebuild the cache from the build environment and specified mounts.","secret":false,"required":false},"flush":{"type":"boolean","defaultValue":false,"description":"mode to flush the cache of old cache items (please be sure to set this so we don't waste storage).","secret":false,"required":false},"flush_age":{"type":"number","defaultValue":30,"description":"flush cache files older then x days.","secret":false,"required":false},"mount":{"type":"array","defaultValue":[],"description":"list of files/directories to cache.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"enabling more logging for debugging.","secret":false,"required":false},"filename":{"type":"string","defaultValue":"","description":"filename to use for cache.","secret":false,"required":false},"bucket":{"type":"string","defaultValue":"","description":"bucket to use to rebuild and restore cache.","secret":false,"required":true},"path":{"type":"string","defaultValue":"[bucket]/<owner>/<repo>/<branch>/","description":"path to store the cache file.","secret":false,"required":true},"fallback_path":{"type":"string","defaultValue":"[bucket]/<owner>/<repo>/<branch>/","description":"fallback path for the cache file.","secret":false,"required":true},"flush_path":{"type":"string","defaultValue":"[bucket]/<owner>/<repo>/","description":"path to search for flushable cache files.","secret":false,"required":true}},"image":"homerovalle/drone-gcs-cache","example":"kind: pipeline\nname: default\n\nsteps:\n- name: restore-cache\n  image: homerovalle/drone-gcs-cache\n  pull: true\n  settings:\n    bucket: gcs_bucket\n    json_key: your-service-account-json-key\n    restore: true\n- name: build\n  image: node\n  commands:\n  - npm install\n- name: rebuild-cache\n  image: homerovalle/drone-gcs-cache\n  pull: true\n  mount:\n    - node_modules\n  settings:\n    bucket: gcs_bucket\n    json_key: your-service-account-json-key\n    rebuild: true\n- name: flush-cache\n  image: homerovalle/drone-gcs-cache\n  pull: true\n  settings:\n    bucket: gcs_bucket\n    json_key: your-service-account-json-key\n    flush: true\n    flush_age: 14\n","url":"https://github.com/hvalle/drone-gcs-cache"},{"id":"gh-pages","name":"GitHub Pages","description":"The GitHub Pages plugin is used to publish static websites to GitHub. The following configuration uses the gh-pages plugin to publish a website.","settings":{"username":{"type":"string","defaultValue":"","description":"GitHub username for pushing changes","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"GitHub password for pushing changes","secret":true,"required":true},"ssh_key":{"type":"string","defaultValue":"","description":"SSH key to use for pushing changes","secret":true,"required":false},"upstream_name":{"type":"string","defaultValue":"origin","description":"GitHub upstream target","secret":false,"required":false},"target_branch":{"type":"string","defaultValue":"gh-pages","description":"GitHub target branch","secret":false,"required":false},"temporary_base":{"type":"string","defaultValue":".tmp","description":"Temporary directory to pull gh-pages branch","secret":false,"required":false},"pages_directory":{"type":"string","defaultValue":"docs","description":"The directory of content to publish","secret":false,"required":true}},"image":"plugins/gh-pages","example":"kind: pipeline\nname: default\n\nsteps:\n- name: publish  \n  image: plugins/gh-pages\n  settings:\n    username: octocat\n    password: p455w0rd\n    pages_directory: public/\n","url":"https://github.com/drone-plugins/drone-gh-pages"},{"id":"git","name":"Git","description":"The git plugin is used to clone a git repository. Note that Drone uses the git plugin by default for all repositories, without any configuration required.","settings":{"depth":{"type":"number","defaultValue":"","description":"creates a shallow clone with truncated history.","secret":false,"required":false},"recursive":{"type":"boolean","defaultValue":false,"description":"clones submodules recursively.","secret":false,"required":false},"skip_verify":{"type":"boolean","defaultValue":false,"description":"skips the SSL verification.","secret":false,"required":false},"tags":{"type":"boolean","defaultValue":false,"description":"fetches tags when set to true.","secret":false,"required":false},"submodule_overrides":{"type":"object","defaultValue":"","description":"override submodule urls.","secret":false,"required":false},"submodule_update_remote":{"type":"boolean","defaultValue":false,"description":"pass the --remote flag to git submodule update.","secret":false,"required":false}},"image":"plugins/git","example":"kind: pipeline\nname: default\n\nsteps:\n- name: clone\n  image: plugins/git\n  settings:\n    depth: 50\n","url":"https://github.com/drone-plugins/drone-git"},{"id":"git-push","name":"Git Push","description":"Use this plugin for deploying an application via `git push`. You will need to supply Drone with a private SSH key or use the same credentials as the cloned repo to being able to push changes.","settings":{"ssh_key":{"type":"string","defaultValue":"","description":"Private SSH key for the remote machine.","secret":false,"required":false},"remote":{"type":"string","defaultValue":"","description":"target remote repository (if blank, assume exists).","secret":false,"required":true},"remote_name":{"type":"string","defaultValue":"deploy","description":"name of the remote to use locally.","secret":false,"required":false},"branch":{"type":"string","defaultValue":"master","description":"target branch to push to.","secret":false,"required":false},"local_branch":{"type":"string","defaultValue":"HEAD","description":"local branch or ref to push from.","secret":false,"required":false},"path":{"type":"string","defaultValue":"current repo","description":"path to the repository.","secret":false,"required":false},"force":{"type":"boolean","defaultValue":false,"description":"force push using the --force flag.","secret":false,"required":false},"skip_verify":{"type":"boolean","defaultValue":false,"description":"skip verification of HTTPS certs.","secret":false,"required":false},"commit":{"type":"boolean","defaultValue":false,"description":"add and commit the contents of the repo before pushing.","secret":false,"required":false},"commit_message":{"type":"string","defaultValue":"[skip ci] Commit dirty state","description":"add a custom message for commit.","secret":false,"required":false},"empty_commit":{"type":"boolean","defaultValue":false,"description":"create an empty commit if there are no changes.","secret":false,"required":false},"author_name":{"type":"string","defaultValue":"commiter name","description":"author name for commit.","secret":false,"required":false},"author_email":{"type":"string","defaultValue":"commiter email","description":"author email for commit.","secret":false,"required":false},"followtags":{"type":"boolean","defaultValue":false,"description":"push with --follow-tags option.","secret":false,"required":false}},"image":"appleboy/drone-git-push","example":"kind: pipeline\nname: default\n\nsteps:\n- name: git-push\n  image: appleboy/drone-git-push\n  settings:\n    branch: master\n    remote: git@git.heroku.com:falling-wind-1624.git\n    force: false\n    commit: true\n","url":"https://github.com/appleboy/drone-git-push"},{"id":"gitea-release","name":"Gitea Release","description":"The gitea-release plugin is used to publish files and artifacts to Gitea Release.","settings":{"api_key":{"type":"string","defaultValue":"","description":"Gitea API key","secret":false,"required":true},"base_url":{"type":"string","defaultValue":"","description":"Gitea base URL","secret":false,"required":true},"files":{"type":"array","defaultValue":"","description":"files to upload to Gitea Release, globs are allowed.","secret":false,"required":true},"file_exists":{"type":"string","defaultValue":"overwrite","description":"what to do if an file asset already exists, supported values - overwrite, skip and fail.","secret":false,"required":false},"checksum":{"type":"string","defaultValue":"","description":"checksum takes hash methods to include in your Gitea release for the files specified. Supported hash methods include - md5, sha1, sha256, sha512, adler32, and crc32.","secret":false,"required":false},"draft":{"type":"boolean","defaultValue":false,"description":"draft release","secret":false,"required":false},"prerelease":{"type":"boolean","defaultValue":false,"description":"prerelease release","secret":false,"required":false},"note":{"type":"string","defaultValue":"","description":"file or string with notes for the release","secret":false,"required":false},"title":{"type":"string","defaultValue":"","description":"file or string for the title shown in the gitea release","secret":false,"required":false},"insecure":{"type":"boolean","defaultValue":false,"description":"visit base_url via insecure https protocol","secret":false,"required":false}},"image":"plugins/gitea-release","example":"kind: pipeline\nname: default\n\nsteps:\n- name: gitea_release\n  image: plugins/gitea-release\n  settings:\n    api_key: xxxxxxxx\n    base_url: https://your.gitea.tld\n    files: dist/*\n","url":"https://github.com/drone-plugins/drone-gitea-release"},{"id":"gitee-pulls","name":"Gitee Pulls","description":"This plugin can automatically update the comments / labels / test in PR to gitee.","settings":{"debug":{"type":"boolean","defaultValue":false,"description":"enable debug mode","secret":false,"required":false},"api_server":{"type":"string","defaultValue":"https://gitee.com/api/v5","description":"the gitee api server url","secret":false,"required":false},"access_token":{"type":"string","defaultValue":"","description":"gitee access token, you can generate personal access token","secret":true,"required":true},"is_running":{"type":"boolean","defaultValue":false,"description":"is the build running","secret":false,"required":false},"comment_disabled":{"type":"boolean","defaultValue":false,"description":"disable automatic updating of the comment with build status","secret":false,"required":false},"label_disabled":{"type":"boolean","defaultValue":false,"description":"disable automatic updating of the label with build status","secret":false,"required":false},"test_disabled":{"type":"boolean","defaultValue":false,"description":"disable automatic updating of the test status","secret":false,"required":false},"running_label":{"type":"string","defaultValue":"drone-build/running,E6A23C","description":"set the name and color of the running label","secret":false,"required":false},"success_label":{"type":"string","defaultValue":"drone-build/success,67C23A","description":"set the name and color of the success label","secret":false,"required":false},"failure_label":{"type":"string","defaultValue":"drone-build/failure,DB2828","description":"set the name and color of the failure label","secret":false,"required":false}},"image":"kit101z/drone-plugin-gitee-pulls","example":"name: default\nkind: pipeline\n\nsteps:\n- name: pr-enhance/start\n  image: kit101z/drone-plugin-gitee-pulls\n  settings:\n    is_running: true\n    access_token:\n      from_secret: GITEE_ACCESS_TOKEN\n","url":"https://github.com/kit101/drone-plugin-gitee-pulls"},{"id":"github-changelog-generator","name":"Github-changelog-generator","description":"This plugin can be used to create a changelog file based on GitHub tags, it will not auto-push it into the repo but rather create a changelog file for you to upload into your desired location via other Drone plugins.","settings":{"github_user":{"type":"string","defaultValue":"","description":"Github username","secret":false,"required":true},"github_project":{"type":"string","defaultValue":"","description":"Github project name","secret":false,"required":true},"output_path":{"type":"string","defaultValue":"CHANGELOG.md","description":"The changelog file path to be created in the current working directory (repo root by default)","secret":false,"required":true}},"image":"naorlivne/drone-github-changelog-generator","example":"kind: pipeline\ntype: docker\nname: default\n\nsteps:\n- name: create_changelog\n  image: naorlivne/drone-github-changelog-generator\n  settings:\n    github_user: naorlivne\n    github_project: drone-github-changelog-generator\n    output_path: CHANGELOG.md\n","url":"https://github.com/naorlivne/drone-github-changelog-generator"},{"id":"github-comment","name":"Github Comment","description":"Use this plugin to update build status on Github Pull Request. This is useful when the complete team does not want to open drone dashboard for each build message.","settings":{"drone_access_token":{"type":"string","defaultValue":"","description":"drone server auth token","secret":false,"required":true},"github_installation_id":{"type":"string","defaultValue":"","description":"installation id of github app for drone","secret":false,"required":true},"github_app_id":{"type":"string","defaultValue":38899,"description":"your app id for drone on github","secret":false,"required":true},"private_key":{"type":"string","defaultValue":"","description":"from github app installation","secret":false,"required":true}},"image":"codehimanshu/gitdrone:1.7","example":"kind: pipeline\nname: default\n\nsteps:\n- name: update-status-to-github\n  image: codehimanshu/gitdrone:1.7\n  settings:\n    drone_access_token:\n      from_secret: drone_access_token\n    github_installation_id:\n      from_secret: github_installation_id\n    github_app_id: 38899\n    private_key:\n      from_secret: private_key\n","url":"https://github.com/gradeup/drone-github-comment"},{"id":"github-release","name":"Github Release","description":"The github-release plugin is used to publish files and artifacts to GitHub Release.","settings":{"api_key":{"type":"string","defaultValue":"","description":"GitHub oauth token with public_repo or repo permission. If you create your token, ensure you select the correct scope. For private repositories you have to select repo while public repositories only requires public_repo.","secret":false,"required":true},"files":{"type":"array","defaultValue":"","description":"files to upload to GitHub Release, globs are allowed","secret":false,"required":true},"file_exists":{"type":"string","defaultValue":"overwrite","description":"what to do if an file asset already exists, supported values - overwrite, skip and fail.","secret":false,"required":false},"checksum":{"type":"string","defaultValue":"","description":"checksum takes hash methods to include in your GitHub release for the files specified. Supported hash methods include - md5, sha1, sha256, sha512, adler32, and crc32.","secret":false,"required":false},"draft":{"type":"boolean","defaultValue":false,"description":"create a draft release","secret":false,"required":false},"prerelease":{"type":"boolean","defaultValue":false,"description":"create a pre-release","secret":false,"required":false},"note":{"type":"string","defaultValue":"","description":"file or string with notes for the release","secret":false,"required":false},"title":{"type":"string","defaultValue":"","description":"file or string for the title shown in the gitea release","secret":false,"required":true},"base_url":{"type":"string","defaultValue":"","description":"GitHub base URL, only required for GHE","secret":false,"required":false},"upload_url":{"type":"string","defaultValue":"","description":"GitHub upload URL, only required for GHE","secret":false,"required":false},"overwrite":{"type":"boolean","defaultValue":false,"description":"force overwrite existing release informations (only title and note)","secret":false,"required":false}},"image":"plugins/github-release","example":"kind: pipeline\nname: default\n\nsteps:\n- name: publish\n  image: plugins/github-release\n  settings:\n    api_key: xxxxxxxx\n    files: dist/*\n","url":"https://github.com/drone-plugins/drone-github-release"},{"id":"github-search-downstream","name":"Github Search Downstream","description":"Use this plugin to trigger builds for a list of downstream repositories fetched from a Github repository search. This is useful when updates to a repository have downstream impacts that should also be tested, and those repository are searchable on Github.","settings":{"github_query":{"type":"string","defaultValue":"","description":"Query to search Github for downstream repositories","secret":false,"required":true},"drone_server":{"type":"string","defaultValue":"","description":"Drone server url","secret":false,"required":true},"drone_token":{"type":"string","defaultValue":"","description":"Drone server token","secret":true,"required":true},"github_token":{"type":"string","defaultValue":"","description":"Github token","secret":true,"required":true},"ignore_missing":{"type":"boolean","defaultValue":false,"description":"continue triggering if build is not found","secret":false,"required":false},"wait":{"type":"boolean","defaultValue":false,"description":"wait for any currently running builds to finish if true, else fails","secret":false,"required":false},"timeout":{"type":"number","defaultValue":60,"description":"how long to wait on any currently running builds.","secret":false,"required":false}},"image":"gboo/github-search-downstream:latest","example":"kind: pipeline\nname: default\n\nsteps:\n- name: trigger\n  image: gboo/github-search-downstream:latest\n  settings:\n    github_query: \"org:drone-plugins topic:drone-plugin\"\n    drone_server: https://drone.example.com\n    drone_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n","url":"https://github.com/gboddin/drone-github-search-downstream"},{"id":"gitlab-ci","name":"Gitlab-CI","description":"The Gitlab-ci plugin allows you to trigger Gitlab-ci job automatically.","settings":{"host":{"type":"string","defaultValue":"","description":"Gitlab server url","secret":false,"required":true},"token":{"type":"string","defaultValue":"","description":"Gitlab token","secret":true,"required":true},"ref":{"type":"string","defaultValue":"","description":"valid refs are only the branches and tags","secret":false,"required":true},"id":{"type":"string","defaultValue":"","description":"Gitlab project id","secret":false,"required":true},"debug":{"type":"boolean","defaultValue":false,"description":"Enable debug mode","secret":false,"required":false}},"image":"appleboy/drone-gitlab-ci","example":"kind: pipeline\nname: default\n\nsteps:\n- name: trigger gitlab job\n  image: appleboy/drone-gitlab-ci\n  settings:\n    host: https://gitlab.com\n    token: xxxxxxxxxx\n    ref: master\n    id: gitlab-project-id\n","url":"https://github.com/appleboy/drone-gitlab-ci"},{"id":"google-chat","name":"Google Chat","description":"The Google chat plugin posts build status messages to your company google chat.","settings":{"webhook":{"type":"string","defaultValue":"","description":"incomming webhook in the Bots section of google chat.","secret":false,"required":true},"key":{"type":"string","defaultValue":"","description":"key for the webook.","secret":true,"required":true},"token":{"type":"string","defaultValue":"","description":"token for the webook.","secret":true,"required":true},"conversation_key":{"type":"string","defaultValue":"","description":"arbitrary key to group messages together.","secret":false,"required":true},"template":{"type":"string","defaultValue":"","description":"overwrite the default message template.","secret":false,"required":false}},"image":"pelotech/drone-google-chat","example":"kind: pipeline\nname: default\n\nsteps:\n- name: notify\n  image: pelotech/drone-google-chat\n  settings:\n    webook: https://dynamite.sandbox.googleapis.com/v1/rooms/roomid\n    key: mykey\n    token: mytoken \n","url":"https://github.com/josmo/drone-google-chat"},{"id":"google-cloud-run","name":"Google Cloud Run","description":"Plugin to build and manage Google Cloud Run services.","settings":{"service_account_json":{"type":"string","defaultValue":"","description":"The Google Cloud Service Account JSON that has required permissions to create, update and delete Google Cloud Run services .","secret":true,"required":true},"project":{"type":"string","defaultValue":"","description":"The Google project where the Google Cloud Run service will be deployed.","secret":true,"required":true},"region":{"type":"string","defaultValue":"","description":"The Google Cloud region e.g asia-south1 where the Google Cloud Run service will be deployed.","secret":true,"required":true},"service_name":{"type":"string","defaultValue":"","description":"The name of the Google Cloud Run service.","secret":false,"required":true},"image":{"type":"string","defaultValue":"","description":"The container image that will be used for the service.","secret":false,"required":true},"delete":{"type":"boolean","defaultValue":"","description":"If the service needs to be deleted.","secret":false,"required":false},"allow_unauthenticated":{"type":"boolean","defaultValue":"","description":"Allow public access to the service.","secret":false,"required":false}},"image":"quay.io/kameshsampath/drone-gcloud-run","example":"kind: pipeline\ntype: docker\nname: deploy-service\n\nenvironment: &buildEnv\n  SERVICE_ACCOUNT_JSON:\n    from_secret: SERVICE_ACCOUNT_JSON\n  GOOGLE_CLOUD_PROJECT:\n    from_secret: GOOGLE_CLOUD_PROJECT\n  GOOGLE_CLOUD_REGION:\n    from_secret: GOOGLE_CLOUD_REGION\n  \nsteps:\n- name: deploy the service\n  image: quay.io/kameshsampath/drone-gcloud-run\n  settings:\n    service_account_json: ${SERVICE_ACCOUNT_JSON}\n    project: ${GOOGLE_CLOUD_PROJECT}\n    region: ${GOOGLE_CLOUD_REGION}\n    service_name: my-service\n    image: asia.gcr.io/${GOOGLE_CLOUD_PROJECT}/greeter\n  environment: *buildEnv\n","url":"https://github.com/kameshsampath/drone-gcloud-run"},{"id":"gpgsign","name":"GPG Sign","description":"This plugin can sign your artifacts and build results with [GnuPG](https://www.gnupg.org/).","settings":{"key":{"type":"string","defaultValue":"","description":"Private GnuPG key, optionally base64 encoded.","secret":true,"required":true},"passphrase":{"type":"string","defaultValue":"","description":"passphrase for the private key.","secret":true,"required":true},"files":{"type":"array","defaultValue":[],"description":"List of globs to match files.","secret":false,"required":true},"detach_sign":{"type":"boolean","defaultValue":false,"description":"Generate a detach-sign signature.","secret":false,"required":false},"clear_sign":{"type":"boolean","defaultValue":false,"description":"Generate a clear-sign signature.","secret":false,"required":false},"excludes":{"type":"array","defaultValue":[],"description":"List of globs to exclude files.","secret":false,"required":false}},"image":"plugins/gpgsign","example":"kind: pipeline\nname: default\n\nsteps:\n- name: sign  \n  image: plugins/gpgsign\n  settings:\n    key: your-base64-encoded-private-key\n    passphrase: p455w0rd\n    files:\n      - dist/*\n","url":"https://github.com/drone-plugins/drone-gpgsign"},{"id":"grafana-annotation","name":"Grafana Annotation","description":"The Grafana Annotation plugin can be used to create an annotation in [Grafana](https://grafana.com).","settings":{"api_key":{"type":"string","defaultValue":"","description":"The Grafana API key","secret":true,"required":true},"tags":{"type":"array","defaultValue":[],"description":"The tags to add to the annotation","secret":false,"required":false},"text":{"type":"string","defaultValue":"","description":"Description","secret":false,"required":true},"url":{"type":"string","defaultValue":"","description":"The Grafana URL","secret":false,"required":true}},"image":"fdeschenes/drone-grafana-annotation","example":"kind: pipeline\nname: default\n\nsteps:\n- name: annotate\n  image: fdeschenes/drone-grafana-annotation\n  settings:\n    api_key: xxxxx\n    image: fdeschenes/drone-grafana-annotation\n    tags:\n      - deploy\n      - production\n    text: \"Deployed\"\n    url: https://grafana.example.com\n","url":"https://github.com/fdeschenes/drone-grafana-annotation"},{"id":"gtalk","name":"GTalk","description":"The GTalk plugin posts build status messages to your google account.","settings":{"google_host":{"type":"string","defaultValue":"talk.google.com:443","description":"The Google Talk server hostname","secret":false,"required":true},"google_username":{"type":"string","defaultValue":"","description":"Google user account","secret":true,"required":true},"google_password":{"type":"string","defaultValue":"","description":"Google user account password","secret":true,"required":true},"to":{"type":"string","defaultValue":"","description":"Google user account","secret":false,"required":true},"message":{"type":"string","defaultValue":"","description":"overwrite the default message","secret":false,"required":true}},"image":"appleboy/drone-gtalk","example":"kind: pipeline\nname: default\n\nsteps:\n- name: gtalk\n  image: appleboy/drone-gtalk\n  settings:\n    google_host: talk.google.com:443\n    google_username: xxxxxxxxxx\n    google_password: xxxxxxxxxx\n    to: google_user_email_account\n","url":"https://github.com/appleboy/drone-gtalk"},{"id":"helm","name":"Helm","description":"This plugin allows you to run Kubernetes Helm as part of your pipeline.","settings":{"namespace":{"type":"string","defaultValue":"default","description":"namespace where you want to install your chart. If you don't specify this parameter","secret":false,"required":false},"chart":{"type":"string","defaultValue":"","description":"The chart to install","secret":false,"required":true},"release":{"type":"string","defaultValue":"If you don't specify the release, helm will generate a random name and you will not be able to upgrade that release.","description":"name used in the helm command to specify the release","secret":false,"required":true},"values":{"type":"string","defaultValue":"","description":"values injected in helm command. These are the values you want to overwrite.","secret":false,"required":false},"prefix":{"type":"string","defaultValue":"","description":"defines the prefix of all the secrets used in the plugin. If prefix is DEV and your secret should be named DEV_PASSWORD and the values would be ${PASSWORD}. If prefix is PROD the secret should be defined as PROD_PASSWORD. This allows you to define different secrets for different.","secret":false,"required":false},"tiller_ns":{"type":"string","defaultValue":"kube-system","description":"namespace where tiller will be installed.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"very verbose output. it will display all the ENVVARS passed to the container. Very handy when debugging secrets.","secret":false,"required":false},"skip_tls_verify":{"type":"boolean","defaultValue":false,"description":"if you create your own SSL certificates, youi will need this flag to be true to avoid having connectivity issues.","secret":false,"required":false},"api_server":{"type":"string","defaultValue":"","description":"kubernetes api server.","secret":true,"required":false},"kubernetes_token":{"type":"string","defaultValue":"","description":"kubernetes token.","secret":true,"required":false}},"image":"fpedrazas/drone-helm","example":"kind: pipeline\nname: default\nsteps:\n- name: helm_deploy\n  image: fpedrazas/drone-helm\n  settings:\n    skip_tls_verify: true\n    chart: ./charts/my-chart\n    release: ${DRONE_BRANCH}\n    values: secret.password=${SECRET_PASSWORD},image.tag=${TAG}\n    prefix: STAGING\n    namespace: development\n","url":"https://github.com/ipedrazas/drone-helm"},{"id":"helm3","name":"Helm3","description":"This plugin provides an interface to Helm 3.","settings":{"mode":{"type":"string","defaultValue":"","description":"Helm command to run; valid options are upgrade, lint, and uninstall. If not provided, can be inferred from the Drone event.","secret":false,"required":false},"update_dependencies":{"type":"boolean","defaultValue":false,"description":"Run helm dependency update before running the main helm command.","secret":false,"required":false},"add_repos":{"type":"array","defaultValue":"boolean","description":"Run helm repo add before running the main helm command.","secret":false,"required":false},"repo_certificate":{"type":"string","defaultValue":"","description":"Base64 encoded TLS certificate for a chart repository.","secret":true,"required":false},"repo_ca_certificate":{"type":"string","defaultValue":"","description":"Base64 encoded TLS certificate for a chart repository certificate authority.","secret":true,"required":false},"namespace":{"type":"string","defaultValue":"","description":"Kubernetes namespace for the un/installation.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"Produce debug output from the plugin and helm itself. Note that this option may expose secrets in the log output.","secret":false,"required":false},"chart":{"type":"string","defaultValue":"","description":"Helm chart to install or lint.","secret":false,"required":false},"release":{"type":"string","defaultValue":"","description":"Release name to un/install.","secret":false,"required":false},"values":{"type":"string","defaultValue":"","description":"Arguments for helm's --set flag.","secret":false,"required":false},"string_values":{"type":"string","defaultValue":"","description":"Arguments for helm's --set-string flag.","secret":false,"required":false},"values_files":{"type":"string","defaultValue":"","description":"Arguments for helm's --values flag.","secret":false,"required":false},"kube_api_server":{"type":"string","defaultValue":"","description":"Kubernetes api server.","secret":false,"required":false},"kube_token":{"type":"string","defaultValue":"","description":"Kubernetes api token.","secret":true,"required":false},"kube_service_account":{"type":"string","defaultValue":"","description":"Account name for connecting to the kubernetes api.","secret":false,"required":false},"kube_certificate":{"type":"string","defaultValue":"","description":"Base64-encoded TLS certificate, for clusters using a self-signed CA certificate.","secret":true,"required":false},"chart_version":{"type":"string","defaultValue":"","description":"Version of the chart to install.","secret":false,"required":false},"dry_run":{"type":"boolean","defaultValue":false,"description":"Prepare the un/installation, but do not perform it.","secret":false,"required":false},"wait_for_upgrade":{"type":"boolean","defaultValue":false,"description":"Wait until kubernetes resources are in a ready state before marking the installation successful.","secret":false,"required":false},"timeout":{"type":"string","defaultValue":"","description":"Timeout for any individual kubernetes operation, formatted as a Golang duration (e.g. \"3m20s\").","secret":false,"required":false},"force_upgrade":{"type":"boolean","defaultValue":false,"description":"Pass --force to helm upgrade.","secret":false,"required":false},"reuse_values":{"type":"boolean","defaultValue":false,"description":"Reuse the values from a previous release.","secret":false,"required":false},"keep_history":{"type":"boolean","defaultValue":false,"description":"Pass --keep-history to helm uninstall.","secret":false,"required":false},"lint_strictly":{"type":"boolean","defaultValue":false,"description":"Pass --strict to helm lint.","secret":false,"required":false},"atomic_upgrade":{"type":"boolean","defaultValue":false,"description":"Pass --atomic to helm upgrade.","secret":false,"required":false},"cleanup_failed_upgrade":{"type":"boolean","defaultValue":false,"description":"Pass --cleanup-on-fail to helm upgrade.","secret":false,"required":false},"skip_tls_verify":{"type":"boolean","defaultValue":false,"description":"Do not check for a valid certificate when connecting to the kubernetes api.","secret":false,"required":false}},"image":"pelotech/drone-helm3","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy_production\n  image: pelotech/drone-helm3\n  settings:\n    helm_command: upgrade\n    chart: ./\n    release: my-project\n    api_server:\n      from_secret: prod_api_server\n    kubernetes_token:\n      from_secret: prod_kubernetes_token\n","url":"https://github.com/pelotech/drone-helm3"},{"id":"heroku","name":"Heroku","description":"The heroku plugin can be used to build and publish images to the Heroku container registry.","settings":{"registry":{"type":"string","defaultValue":"registry.heroku.com","description":"authenticates to this registry","secret":false,"required":false},"process_type":{"type":"string","defaultValue":"","description":"process type","secret":false,"required":true},"app":{"type":"string","defaultValue":"","description":"app name","secret":false,"required":true},"email":{"type":"string","defaultValue":"","description":"auth email","secret":false,"required":true},"api_key":{"type":"string","defaultValue":"","description":"heroku api key","secret":true,"required":true}},"image":"plugins/docker","example":"kind: pipeline\nname: default\n\nsteps:\n- name: docker  \n  image: plugins/docker\n  settings:\n    email: foo@bar.com\n    api_key: foobar\n    app: foo\n    process_type: bar\n","url":"https://github.com/drone-plugins/drone-docker"},{"id":"hg","name":"Mercurial","description":"The mercurial plugin is used to clone a mercurial repository.","image":"plugins/hg","example":"kind: pipeline\nname: default\n\nclone:\n  disable: true\n\nsteps:\n- name: checkout\n  image: plugins/hg\n","url":"https://github.com/drone-plugins/drone-hg"},{"id":"hugo","name":"Hugo","description":"The Hugo plugin automatically generates static web page files, which can be published afterwards!","settings":{"buildDrafts":{"type":"boolean","defaultValue":false,"description":"Include content marked as draft.","secret":false,"required":false},"buildExpired":{"type":"boolean","defaultValue":false,"description":"Include expired content.","secret":false,"required":false},"buildFuture":{"type":"boolean","defaultValue":false,"description":"include content with publishdate in the future.","secret":false,"required":false},"config":{"type":"string","defaultValue":"path/config.yaml|json|toml","description":"The path to the config file.","secret":false,"required":false},"content":{"type":"string","defaultValue":"","description":"The path to the content directory.","secret":false,"required":false},"layout":{"type":"string","defaultValue":"","description":"The path to the layout directory.","secret":false,"required":false},"output":{"type":"string","defaultValue":"","description":"The path to the output directory.","secret":false,"required":false},"source":{"type":"string","defaultValue":"","description":"The path to read files relative from.","secret":false,"required":false},"theme":{"type":"string","defaultValue":"","description":"theme to use (located in /themes/THEMENAME/).","secret":false,"required":false},"url":{"type":"string","defaultValue":"","description":"hostname (and path) to the root.","secret":false,"required":false},"validate":{"type":"boolean","defaultValue":false,"description":"Validate config file before generation.","secret":false,"required":false}},"image":"plugins/hugo","example":"kind: pipeline\nname: default\n\nsteps:\n- name: build\n  image: plugins/hugo\n  settings:\n    hugo_version: 0.55\n    validate: true\n","url":"https://github.com/drone-plugins/drone-hugo"},{"id":"instant-access","name":"InstantAccess(即时达)","description":"The InstantAccess plugin posts build status messages to your account.","settings":{"channel":{"type":"string","defaultValue":"","description":"The InstantAccess(即时达) channel key, get key by http://push.ijingniu.cn/push/channel/","secret":false,"required":true},"head":{"type":"string","defaultValue":"","description":"Notification title","secret":false,"required":true},"body":{"type":"string","defaultValue":"","description":"Notification body, supports markdown","secret":false,"required":true}},"image":"erguotou/drone-instant-access","example":"kind: pipeline\nname: default\n\nsteps:\n- name: send-wechat\n  image: erguotou/drone-instant-access\n  settings:\n    channel: d255d62caef24a3bb66c3465dad70407\n    head: hello world\n    body: Send by InstantAccess\n","url":"https://github.com/erguotou520/drone-instant-access"},{"id":"java-maven","name":"Java Maven","description":"The Java Apache Maven plugin that can be used to build Java applications using Apache Maven build tool.","settings":{"context_dir":{"type":"string","defaultValue":"","description":"The context directory within the source repository where \"pom.xml\" is found to execute the maven goals. Defaults to Drone workspace root.","secret":false,"required":false},"goals":{"type":"array","defaultValue":"-DskipTests clean install","description":"An array of maven goals to run.","secret":false,"required":false},"maven_modules":{"type":"array","defaultValue":"","description":"An array of maven modules to be built incase of a multi module maven project.","secret":false,"required":false},"maven_mirror_url":{"type":"string","defaultValue":"","description":"The maven mirror to use for downloading the build dependencies.","secret":false,"required":false},"server_user":{"type":"string","defaultValue":"","description":"The username for the maven repository manager server.","secret":false,"required":false},"server_password":{"type":"string","defaultValue":"","description":"The password for the maven repository manager server.","secret":true,"required":false},"proxy_user":{"type":"string","defaultValue":"","description":"The username for the proxy server.","secret":true,"required":false},"proxy_password":{"type":"string","defaultValue":"","description":"The password for the proxy server.","secret":true,"required":false},"proxy_port":{"type":"number","defaultValue":"","description":"Port number for the proxy server.","secret":false,"required":false},"proxy_host":{"type":"string","defaultValue":false,"description":"Proxy server Host.","secret":false,"required":false},"proxy_non_proxy_hosts":{"type":"array","defaultValue":false,"description":"Non proxy server hosts.","secret":false,"required":false},"proxy_protocol":{"type":"string","defaultValue":false,"description":"Protocol for the proxy ie http or https.","secret":false,"required":false}},"image":"quay.io/kameshsampath/drone-java-maven-plugin","example":"kind: pipeline\nname: default\n\nsteps:\n- name: build-java-app\n  image: quay.io/kameshsampath/drone-java-maven-plugin\n  pull: if-not-exists\n","url":"https://github.com/kameshsampath/drone-java-maven-plugin"},{"id":"jenkins","name":"Jenkins","description":"The Jenkins plugin allows you to trigger Jenkins job automatically.","settings":{"url":{"type":"string","defaultValue":"","description":"The Jenkins URL","secret":false,"required":true},"user":{"type":"string","defaultValue":"","description":"The Jenkins user","secret":false,"required":true},"token":{"type":"string","defaultValue":"","description":"The Jenkins token","secret":true,"required":true},"job":{"type":"string","defaultValue":"","description":"The Jenkins job name","secret":false,"required":true}},"image":"appleboy/drone-jenkins","example":"kind: pipeline\nname: default\n\nsteps:\n- name: trigger jenkins job\n  image: appleboy/drone-jenkins\n  settings:\n    url: http://example.com\n    user: appleboy\n    token: xxxxxxxxxx\n    job: drone-jenkins-plugin-job\n","url":"https://github.com/appleboy/drone-jenkins"},{"id":"kaniko","name":"Kaniko","description":"This plugin can be used to build and publish images to the Docker registry, using the Kaniko image builder. Unlike the Docker plugin you are not required you to run your agent in privileged mode.","settings":{"registry":{"type":"string","defaultValue":"","description":"authenticates to this registry","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"authenticates with this username","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"authenticates with this password","secret":true,"required":true},"repo":{"type":"string","defaultValue":"","description":"repository name for the image","secret":false,"required":true},"tags":{"type":"array","defaultValue":[],"description":"repository tags to apply to the image","secret":false,"required":false},"dockerfile":{"type":"string","defaultValue":"Dockerfile","description":"path to the Dockerfile","secret":false,"required":false},"context":{"type":"string","defaultValue":"git repo root","description":"path to the context directory","secret":false,"required":false},"target":{"type":"string","defaultValue":"","description":"the build target to use, must be defined in the docker file","secret":false,"required":false},"build_args":{"type":"array","defaultValue":[],"description":"custom arguments passed to docker build.","secret":false,"required":false}},"image":"banzaicloud/drone-kaniko","example":"kind: pipeline\nname: default\n\nsteps:\n- name: kaniko\n  image: banzaicloud/drone-kaniko\n  settings:\n    username: kevinbacon\n    password: pa55word\n    repo: foo/bar\n    tags: latest\n","url":"https://github.com/banzaicloud/drone-kaniko"},{"id":"kube","name":"Drone Kube","description":"Drone kubernetes plugin.","settings":{"template":{"type":"string","defaultValue":"","description":"The template to use","secret":false,"required":true},"namespace":{"type":"string","defaultValue":"","description":"The namespace to deploy the template in","secret":false,"required":true},"server":{"type":"string","defaultValue":"","description":"The kubernetes server to deploy the template in","secret":false,"required":true}},"image":"vallard/drone-kube","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: vallard/drone-kube\n  settings:\n    template: deployment.yaml\n","url":"https://github.com/vallard/drone-kube"},{"id":"kubernetes","name":"Kubernetes Deployments","description":"The Kubernetes plugin can be used to upgrade a Kubernetes deployment with a newer version of an image.","settings":{"container":{"type":"array","defaultValue":"","description":"Container name (setup with the name option in the kubernetes manifest).","secret":false,"required":true},"deployment":{"type":"array","defaultValue":"","description":"Deployment name.","secret":false,"required":true},"kubernetes_server":{"type":"string","defaultValue":"","description":"Kubernetes server URL.","secret":false,"required":true},"kubernetes_token":{"type":"string","defaultValue":"","description":"Kubernetes token.","secret":true,"required":true},"namespace":{"type":"string","defaultValue":"","description":"Kubernetes namespace.","secret":false,"required":true},"repo":{"type":"string","defaultValue":"","description":"Image to update full name (with registry path).","secret":false,"required":true},"tag":{"type":"string","defaultValue":"","description":"Image tag to update.","secret":false,"required":true}},"image":"quay.io/honestbee/drone-kubernetes","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: quay.io/honestbee/drone-kubernetes\n  settings:\n    kubernetes_server: https://kubernetes.company.org\n    kubernetes_token: CXHVLJSDKJFS...\n    namespace: app\n    deployment: my-deployment\n    repo: myorg/myrepo\n    container: my-container\n    tag: mytag\n","url":"https://github.com/honestbee/drone-kubernetes"},{"id":"lambda","name":"AWS Lambda","description":"The plugin automatically deployes a serverless function to AWS Lambda from a zip file located in an S3 bucket. This plugin does not handle creating or uploading the zip file.","settings":{"aws_access_key_id":{"type":"string","defaultValue":"","description":"The AWS access key ID","secret":true,"required":false},"aws_secret_access_key":{"type":"string","defaultValue":"","description":"AWS secret key. Access and secret key variables override credentials stored in config files.","secret":true,"required":false},"aws_default_region":{"type":"string","defaultValue":"","description":"AWS region. This variable overrides the default region of the in-use profile, if set.","secret":false,"required":false},"function_name":{"type":"string","defaultValue":"","description":"Name of the lambda function as set in AWS.","secret":false,"required":true},"s3_bucket":{"type":"string","defaultValue":"","description":"Name of the S3 bucket in which the zip package for deployment is stored.","secret":false,"required":true},"file_name":{"type":"string","defaultValue":"","description":"Name of the file in S3. Can be prefixed like my-directory/my-zip-package.zip.","secret":false,"required":true}},"image":"omerxx/drone-lambda-plugin","example":"kind: pipeline\ntype: docker\nname: default\n\nsteps:\n- name: deploy-lambda\n  image: omerxx/drone-lambda-plugin\n  settings:\n    function_name: my-function\n    s3_bucket: some-bucket\n    file_name: lambda-dir/lambda-project-${DRONE_BUILD_NUMBER}.zip\n","url":"https://github.com/omerxx/drone-lambda-plugin"},{"id":"line","name":"Line","description":"The Line plugin posts build status messages to your channel.","settings":{"channel_secret":{"type":"string","defaultValue":"","description":"The channel secret","secret":true,"required":true},"channel_token":{"type":"string","defaultValue":"","description":"The channel token","secret":true,"required":true},"to":{"type":"string","defaultValue":"","description":"The user ID to send a message to","secret":false,"required":false},"message":{"type":"string","defaultValue":"","description":"Overwrite the default message template.","secret":false,"required":true},"images":{"type":"array","defaultValue":[],"description":"Valid image URLs","secret":false,"required":false},"videos":{"type":"array","defaultValue":[],"description":"Valid video URLs","secret":false,"required":false},"audios":{"type":"array","defaultValue":[],"description":"Valid audio URLs","secret":false,"required":false},"locations":{"type":"array","defaultValue":[],"description":"Valid location lat/lng","secret":false,"required":false},"stickers":{"type":"array","defaultValue":[],"description":"Valid stickers","secret":false,"required":false}},"image":"appleboy/drone-line","example":"kind: pipeline\nname: default\nsteps:\n- name: line\n  image: appleboy/drone-line\n  settings:\n    channel_secret: xxxxxxxxxx\n    channel_token: xxxxxxxxxx\n    to: line_user_id\n    to_room: line_room_id\n    to_group: line_group_id\n","url":"https://github.com/appleboy/drone-line"},{"id":"load-and-store","name":"Load and store","description":"This plugin can be used to load and publish images to the Docker registry. It can come in handy when the default Docker plugin cannot be used. A good example usecase is building Docker images with nix which produces a Docker image archive.","settings":{"archive":{"type":"string","defaultValue":"","description":"location of the docker image archive.","secret":false,"required":true},"registry":{"type":"string","defaultValue":"docker.io","description":"authenticates to this registry.","secret":false,"required":false},"repo":{"type":"string","defaultValue":"","description":"repository name for the image.","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"The username to use for the repository","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"The password to use for the repository","secret":true,"required":true},"debug":{"type":"boolean","defaultValue":false,"description":"Enable verbose logging","secret":false,"required":false}},"image":"allgreed/drone-load-and-store","example":"kind: pipeline\nname: default\nsteps:\n- name: push-docker-image\n  image: allgreed/drone-load-and-store\n  settings:\n    archive: docker-image.tar.gz\n    repo: username/repository\n    username:\n      from_secret: docker_username\n    password:\n      from_secret: docker_password\n","url":"https://github.com/allgreed/drone-load-and-store"},{"id":"manifest","name":"Manifest","description":"This plugin can push manifests for multi-arch Docker images.","settings":{"username":{"type":"string","defaultValue":"Anonymous access","description":"Username for DockerHub authentication","secret":false,"required":true},"password":{"type":"string","defaultValue":"Anonymous access","description":"Password for DockerHub authentication","secret":true,"required":true},"insecure":{"type":"boolean","defaultValue":false,"description":"Enable insecure (not TLS) registry support.","secret":false,"required":false},"target":{"type":"string","defaultValue":"","description":"Target image for manifest.","secret":false,"required":true},"template":{"type":"string","defaultValue":"","description":"Template for manifest sources, OS and ARCH are replaced.","secret":false,"required":true},"platforms":{"type":"array","defaultValue":[],"description":"List of platforms in format OS/ARCH.","secret":false,"required":true},"spec":{"type":"string","defaultValue":"","description":"Path to a manifest specification file.","secret":false,"required":true},"ignore_missing":{"type":"boolean","defaultValue":false,"description":"Ignore missing source images.","secret":false,"required":false},"tag":{"type":"string","defaultValue":"","description":"Tag, only used with spec.","secret":false,"required":false},"tags":{"type":"array","defaultValue":[],"description":"Tags, only used with manifest.","secret":false,"required":false},"default_tags":{"type":"boolean","defaultValue":false,"description":"Default tags, only used with spec.","secret":false,"required":false},"auto_tag":{"type":"boolean","defaultValue":false,"description":"Auto tags, only used with spec.","secret":false,"required":false}},"image":"plugins/manifest","example":"kind: pipeline\nname: default\nsteps:\n- name: manifest\n  image: plugins/manifest\n  settings:\n    username: kevinbacon\n    password: pa55word\n    target: foo/bar:v1.0.0\n    template: foo/bar:v1.0.0-OS-ARCH\n    platforms:\n      - linux/amd64\n      - linux/arm\n      - linux/arm64\n","url":"https://github.com/drone-plugins/drone-manifest"},{"id":"marathon","name":"Marathon","description":"This plugin can be used to deploy applications to a Marathon server.","settings":{"server":{"type":"string","defaultValue":"http://marathon.mesos:8080","description":"Marathon server URL.","secret":false,"required":false},"marathonfile":{"type":"string","defaultValue":"marathon.json","description":"The Marathon configuration file.","secret":false,"required":false},"trigger_restart":{"type":"boolean","defaultValue":false,"description":"Force a restart of the application.","secret":false,"required":false},"values":{"type":"object","defaultValue":"","description":"Map of values to replace in the marathonfile.","secret":false,"required":false}},"image":"e20co/drone-marathon","example":"kind: pipeline\nname: default\n\nsteps:\n- name: marathon\n  image: e20co/drone-marathon\n  settings:\n    server: http://marathon.mesos:8080\n","url":"https://github.com/expansioncap/drone-marathon"},{"id":"matrix","name":"Matrix","description":"This plugin can be used to send build success or failure messages to a Matrix room.","settings":{"homeserver":{"type":"string","defaultValue":"https://matrix.org","description":"The Matrix homeserver URL.","secret":false,"required":false},"roomid":{"type":"string","defaultValue":"","description":"Room ID to send messages (not alias, but ID, and you can skip the !).","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"Username on homeserver.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"Password on homeserver (use with username).","secret":true,"required":true},"userid":{"type":"string","defaultValue":"","description":"Matrix user ID (@user:homeserver.tld).","secret":false,"required":false},"accesstoken":{"type":"string","defaultValue":"","description":"Matrix access token (use with userid).","secret":true,"required":false},"template":{"type":"string","defaultValue":"","description":"Template to use for message.","secret":false,"required":false}},"image":"plugins/matrix","example":"kind: pipeline\nname: default\n\nsteps:\n- name: notify\n  image: plugins/matrix\n  settings:\n    homeserver: https://matrix.org\n    roomid: abcdefghijklmnopqrstuvwxyz:matrix.org\n    username: octocat\n    password: p455w0rd\n","url":"https://github.com/drone-plugins/drone-matrix"},{"id":"metronome","name":"Metronome","description":"This plugin can be used to deploy applications to a Metronome server, it will create\\update the given Metronome tasks as needed.","settings":{"metronome_host":{"type":"string","defaultValue":"http://metronome.mesos:9000","description":"The Metronome server URL (no trailing slash should be used).","secret":false,"required":false},"metronome_job_file":{"type":"string","defaultValue":"metronome.json","description":"The Metronome configuration file location relative to the root folder of the repo.","secret":false,"required":true}},"image":"naorlivne/drone-metronome","example":"kind: pipeline\nname: default\n\nsteps:\n- name: metronome_deploy\n  image: naorlivne/drone-metronome\n  settings:\n    metronome_host: http://metronome.mesos:9000\n    metronome_job_file: metronome.json\n","url":"https://github.com/naorlivne/drone-metronome"},{"id":"mvn-auth","name":"Maven Auth","description":"The Maven Auth plugin can be used for generating the settings.xml with server authentication for a Maven repository. Please note that dependencies are saved in the .m2 directory.","settings":{"servers":{"type":"array","defaultValue":[],"description":"The list of servers","secret":false,"required":false},"profiles":{"type":"array","defaultValue":[],"description":"The list of profiles","secret":false,"required":false},"active_profiles":{"type":"array","defaultValue":[],"description":"The list of active profiles","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"Enable debug mode","secret":false,"required":false}},"image":"robertstettner/drone-mvn-auth","example":"kind: pipeline\nname: default\n\nsteps:\n- name: auth\n  image: robertstettner/drone-mvn-auth\n  settings:\n    servers:\n    - id: release\n      username: admin\n      password: R31e4sE\n    - id: snapshot\n      username: snap\n      password: crackle123\n    profiles:\n      - id: my-profile\n        repositories:\n          - id: myRepo\n            name: Repository for my libraries\n            url: http://maven.my.com\n            layout: default\n        plugin_repositories:\n          - id: myRepo\n            name: Repository for my libraries\n            url: http://maven.my.com\n            layout: default\n    active_profiles:\n      - my-profile\n","url":"https://github.com/robertstettner/drone-mvn-auth"},{"id":"netlify","name":"Netlify","description":"The netlify plugin deploy your build to netlify.","settings":{"token":{"type":"string","defaultValue":"","description":"The netlify token","secret":true,"required":true},"site_id":{"type":"string","defaultValue":"","description":"Set the Site ID (or API ID in your Site settings dashboard).","secret":false,"required":true},"site_name":{"type":"string","defaultValue":"","description":"Set the Netlify subdomain.","secret":false,"required":false},"domain":{"type":"string","defaultValue":"","description":"Set your custom domain.","secret":false,"required":false},"enviroment":{"type":"string","defaultValue":"","description":"Set the Netlify environment.","secret":false,"required":false},"path":{"type":"string","defaultValue":"","description":"Path to a folder or zip file to deploy.","secret":false,"required":false}},"image":"lucap/drone-netlify","example":"kind: pipeline\nname: default\n\nsteps:\n- name: netlify\n  image: lucap/drone-netlify\n  settings:\n    token: xxxxx\n    site_id: xxxxxxx-xxxx-xxx-xxxxxxxx\n","url":"https://github.com/lucaperret/drone-netlify"},{"id":"newrelic-deployment","name":"Newrelic Deployment","description":"The Newrelic deployment plugin reports/logs your deployment to your dashboard to make it easy to track changes.","settings":{"api_key":{"type":"string","defaultValue":"","description":"Your Newrelic API key.","secret":true,"required":true},"app_name":{"type":"string","defaultValue":"","description":"Your Newrelic application name.","secret":true,"required":true}},"image":"cityfurniture/drone-newrelic-deployment","example":"kind: pipeline\nname: default\n\nsteps:\n- name: newrelic\n  image: cityfurniture/drone-newrelic-deployment\n  settings:\n    api_key: <your-api-key>\n    app_name: <your-app-name>\n","url":"https://github.com/cityfurniture/newrelic-deployment"},{"id":"nomad","name":"Nomad","description":"Use the Nomad plugin to deploy services from a template. You will need to supply Drone with the nomad template file.","settings":{"addr":{"type":"string","defaultValue":"","description":"The Nomad server address","secret":false,"required":true},"template":{"type":"string","defaultValue":"","description":"Template for Nomad","secret":false,"required":true},"region":{"type":"string","defaultValue":"","description":"Nomad region","secret":false,"required":false},"namespace":{"type":"string","defaultValue":"","description":"Nomad namespace","secret":false,"required":false},"token":{"type":"string","defaultValue":"","description":"Nomad token","secret":true,"required":false}},"image":"loq9/drone-nomad","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: loq9/drone-nomad\n  settings:\n    addr: https://your.nomad.server/...\n    template: nomad-template.hcl\n","url":"https://github.com/loq9/drone-nomad"},{"id":"now","name":"Now","description":"The Now plugin deploy your build to now.sh.","settings":{"deploy_name":{"type":"string","defaultValue":"working directory","description":"The deployment name","secret":false,"required":false},"now_token":{"type":"string","defaultValue":"","description":"The now.sh token","secret":true,"required":true},"directory":{"type":"string","defaultValue":"","description":"The directory to deploy","secret":false,"required":false},"team":{"type":"string","defaultValue":"","description":"Set the team scope","secret":false,"required":false},"type":{"type":"string","defaultValue":"","description":"Deployment type (docker, npm, static).","secret":false,"required":false},"alias":{"type":"string","defaultValue":"","description":"Target now.sh subdomain or domain","secret":false,"required":false},"cleanup":{"type":"boolean","defaultValue":false,"description":"Equivalent to now rm --safe --yes $alias","secret":false,"required":false},"rules_domain":{"type":"string","defaultValue":"","description":"Your domain","secret":false,"required":false},"rules_file":{"type":"string","defaultValue":"","description":"File that contain set of rules","secret":false,"required":false},"scale":{"type":"string","defaultValue":"","description":"Min and Max scaling values","secret":false,"required":false}},"image":"lucap/drone-now","example":"kind: pipeline\nname: default\nsteps:\n- name: now\n  image: lucap/drone-now\n  settings:\n    deploy_name: deployment-name\n    now_token: keep-this-secret\n","url":"https://github.com/lucaperret/drone-now"},{"id":"npm","name":"NPM","description":"The NPM plugin can be used to publish libraries to public or private registries.","settings":{"username":{"type":"string","defaultValue":"","description":"the username for the account to publish with","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"the password for the account to publish with","secret":true,"required":true},"token":{"type":"string","defaultValue":"","description":"the token for the account to publish with","secret":true,"required":false},"email":{"type":"string","defaultValue":"","description":"the email for the account to publish with","secret":false,"required":false},"registry":{"type":"string","defaultValue":"https://registry.npmjs.org","description":"the registry to publish to","secret":false,"required":false},"folder":{"type":"string","defaultValue":"the workspace directory","description":"the folder, relative to the workspace, containing the library.","secret":false,"required":false}},"image":"plugins/npm","example":"kind: pipeline\nname: default\n\nsteps:\n- name: npm\n  image: plugins/npm\n  settings:\n    username: bob\n    password: password\n    email: bob@bob.me\n","url":"https://github.com/drone-plugins/drone-npm"},{"id":"npm-auth","name":"NPM Auth","description":"This plugin is used to generate an .npmrc file locally to authenticate against any public/private NPM repository.","settings":{"username":{"type":"string","defaultValue":"","description":"The NPM username","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"The NPM password","secret":true,"required":true},"email":{"type":"string","defaultValue":"","description":"The NPM email","secret":false,"required":true},"registry":{"type":"string","defaultValue":"https://registry.npmjs.org","description":"The NPM registry","secret":false,"required":false},"scope":{"type":"string","defaultValue":"","description":"The NPM scope","secret":false,"required":false},"path":{"type":"string","defaultValue":"./","description":"Output path of the generated .npmrc file.","secret":false,"required":false}},"image":"robertstettner/drone-npm-auth","example":"kind: pipeline\nname: default\nsteps:\n- name: npm-auth\n  image: robertstettner/drone-npm-auth\n  settings:\n    username: joebloggs\n    password: mypass\n    email: jb@me.com\n","url":"https://github.com/robertstettner/drone-npm-auth"},{"id":"openfaas","name":"OpenFaaS","description":"This plugin can be used to build (generate Dockerfile and stuff) and Deploy functions to the OpenFaaS Gateway, and for the Docker image build & publish step, you can use the plugin for Kaniko or you favorite plugin.","settings":{"image_name":{"type":"string","defaultValue":"reads the parameter from yaml file","description":"the docker image name published.","secret":false,"required":false},"registry":{"type":"string","defaultValue":"","description":"the registry where the Docker image is published.","secret":false,"required":false},"url":{"type":"string","defaultValue":"","description":"authenticates and deploys to this OpenFaaS Gateway.","secret":false,"required":false},"tls_no_verify":{"type":"boolean","defaultValue":false,"description":"set to true if you setup don't have a valid tls certificate.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"the username to authenticate to the OpenFaaS Gateway.","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"the password to authenticate to the OpenFaaS Gateway.","secret":true,"required":false},"deploy":{"type":"boolean","defaultValue":false,"description":"set to true if you want to deploy the function.","secret":false,"required":false},"tag":{"type":"string","defaultValue":"set latest","description":"repository tag strategy for the function, based on OpenFaaS TAG.","secret":false,"required":false},"yaml":{"type":"string","defaultValue":"reads stack.yml file","description":"OpenFaaS function definition to be used. Optional.","secret":false,"required":false},"template":{"type":"string","defaultValue":"","description":"If you need to pull a OpenFaaS store template to build the function.","secret":false,"required":false}},"image":"knovus/drone-openfaas","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: knovus/drone-openfaas\n  settings:\n    deploy: true\n    yaml: my_function.yml\n    image_name: ${DRONE_REPO_NAME}\n    url: https://my.openfaas.com\n    password:\n      from_secret: openfaas_password\n    registry:\n      from_secret: docker_registry\n","url":"https://github.com/knovus/drone-openfaas"},{"id":"packer","name":"Packer","description":"This plugin can build automated machine images with Packer.","settings":{"actions":{"type":"array","defaultValue":"","description":"a list of actions to have packer perform.","secret":false,"required":false},"vars":{"type":"object","defaultValue":"","description":"a map of variables to pass to the Packer build commands. Each value is passed as a <key>=<value> option.","secret":false,"required":false},"var_files":{"type":"array","defaultValue":"","description":"a list of var files to use. Each value is passed as -var-file=.","secret":false,"required":false},"except":{"type":"array","defaultValue":"","description":"validate or build all builds other than these.","secret":false,"required":false},"only":{"type":"array","defaultValue":"","description":"validate or build only the specified builds.","secret":false,"required":false},"template":{"type":"string","defaultValue":"","description":"A json file will execute multiple builds in parallel as defined in the template.","secret":false,"required":false},"syntax_only":{"type":"boolean","defaultValue":false,"description":"Only check syntax. Do not verify config of the template.","secret":false,"required":false},"color":{"type":"boolean","defaultValue":false,"description":"Disable color output.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"Debug mode enabled for builds.","secret":false,"required":false},"parallel":{"type":"boolean","defaultValue":false,"description":"Disable parallelization.","secret":false,"required":false},"force":{"type":"boolean","defaultValue":false,"description":"Force a build to continue if artifacts exist, deletes existing artifacts.","secret":false,"required":false},"readable":{"type":"boolean","defaultValue":false,"description":"Machine-readable output.","secret":false,"required":false}},"image":"appleboy/drone-packer","example":"kind: pipeline\nname: default\n\nsteps:\n- name: packer\n  image: appleboy/drone-packer\n  settings:\n    template: aws.json\n    actions: build\n","url":"https://github.com/appleboy/drone-packer"},{"id":"plugin-fossa","name":"fossa","description":"By default, this plugin will run the analyze command per the generic CI documentation for FOSSA.","settings":{"api_key":{"type":"string","defaultValue":"","description":"FOSSA API key.","secret":true,"required":true},"debug":{"type":"boolean","defaultValue":false,"description":"Enable debug mode.","secret":false,"required":false}},"image":"rancher/drone-fossa:latest","example":"kind: pipeline\nname: default\n\nsteps:\n- name: fossa  \n  image: rancher/drone-fossa:latest\n  settings:\n    api_key:\n      from_secret: FOSSA_API_KEY\n","url":"https://github.com/rancherlabs/drone-plugin-fossa"},{"id":"plugin-kube","name":"Kubernetes","description":"Updates Kubernetes deployments from templates & configMaps from files. This plugin will either create or update existing resources dependent on their presence. It will wait for deployments before it progresses.","settings":{"ca":{"type":"string","defaultValue":"","description":"Base-64 encoded string of the K8s CA cert.","secret":true,"required":false},"server":{"type":"string","defaultValue":"","description":"Full url of Kubernetes API endpoint including protocol & port.","secret":false,"required":true},"kubernetes_token":{"type":"string","defaultValue":"","description":"Kubernetes service account token (Not base64 encoded).","secret":true,"required":true},"template":{"type":"string","defaultValue":"","description":"Path to Kubernetes yaml based definition file (Configmap or Deployment).","secret":false,"required":false},"configmap_file":{"type":"string","defaultValue":"","description":"path to file containing data to inject in configmap (They configmap key that contains the data will be the filename).","secret":false,"required":false},"Other_parameters":{"type":"string","defaultValue":"","description":"Other parameters will be made available for interpolation within yaml templates (upper-case will be converted to lower-case).","secret":false,"required":false}},"image":"danielgormly/drone-plugin-kube:0.0.1","example":"kind: pipeline\nname: default\n\nsteps:\n- name: Deploy app\n  image: danielgormly/drone-plugin-kube:0.0.1\n  settings:\n    template: path/to/deployment.yaml # relative to repo root\n    ca: LS0tLS1... # BASE64 encoded string of the K8s CA cert\n    server: https://10.0.0.20:6443 # K8s master node address\n    token:\n      from_secret: kubernetes_token # Service account token to a service account that can manage deployments\n","url":"https://github.com/danielgormly/drone-plugin-kube"},{"id":"pypi","name":"PyPI","description":"This plugin allows you to publish Python pypi packages as part of your pipeline.","settings":{"username":{"type":"string","defaultValue":"","description":"Username to be used for the pypi publish.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"Password to be used for the pypi publish.","secret":true,"required":true},"repository":{"type":"string","defaultValue":"https://upload.pypi.org/legacy/","description":"The URL of the repository to be published to.","secret":false,"required":false},"distributions":{"type":"string","defaultValue":"only sdist","description":"List of distribution types to publish.","secret":false,"required":false},"setupfile":{"type":"string","defaultValue":"setup.py","description":"The relative path from the workspace root to the setup.py file to be used.","secret":false,"required":false},"skip_build":{"type":"boolean","defaultValue":false,"description":"Skip the build and only upload pre-build files from dist/*.","secret":false,"required":false}},"image":"plugins/pypi","example":"kind: pipeline\nname: default\n\nsteps:\n- name: pypi_publish\n  image: plugins/pypi\n  settings:\n    username: john\n    password: secret\n","url":"https://github.com/drone-plugins/drone-pypi"},{"id":"rancher","name":"Rancher","description":"The Rancher plugin can be used to deploy a Docker image to a Rancher environment.","settings":{"url":{"type":"string","defaultValue":"","description":"the url of the rancher server","secret":false,"required":true},"access_key":{"type":"string","defaultValue":"","description":"the access key for the rancher environment","secret":true,"required":true},"secret_key":{"type":"string","defaultValue":"","description":"the secret key for the rancher environment","secret":true,"required":true},"service":{"type":"string","defaultValue":"","description":"rancher service on that environment to upgrade","secret":false,"required":true},"start_first":{"type":"boolean","defaultValue":true,"description":"start new container before stopping old one.","secret":false,"required":false},"confirm":{"type":"boolean","defaultValue":false,"description":"auto confirm the service upgrade if successful.","secret":false,"required":false},"timeout":{"type":"number","defaultValue":30,"description":"the maximum wait time in seconds for the service to upgrade.","secret":false,"required":false},"docker_image":{"type":"string","defaultValue":"","description":"docker image to use to upgrade the environment","secret":false,"required":true},"interval_millis":{"type":"number","defaultValue":"","description":"interval in milliseconds between upgrades of the containers","secret":false,"required":false},"batch_size":{"type":"number","defaultValue":"","description":"number of containers to upgrade in one batch","secret":false,"required":false}},"image":"pelotech/drone-rancher","example":"kind: pipeline\ntype: docker\nname: default\n\nsteps:\n- name: publish\n  image: pelotech/drone-rancher\n  settings:\n    url: http://awesomehost:awesomeport\n    access_key: superaccesskey\n    secret_key: supersecretkey\n    service: huh/service1\n    docker_image: huh/hello\n","url":"https://github.com/josmo/drone-rancher"},{"id":"rancher-stack-v1","name":"Rancher Stack v1","description":"A drone.io Rancher Stack plugin to deploy/update an entire Rancher stack (not just a single service) to Rancher v1.6. See Docker Hub for more information.","settings":{"url":{"type":"string","defaultValue":"","description":"The url where your rancher resides. E.g rancher.domain.com","required":true,"secret":false},"stack":{"type":"string","defaultValue":"","description":"This stack must already exist in your rancher environment. E.g app-staging.","required":true,"secret":false},"accesskey":{"type":"string","defaultValue":"","description":"The access key for your rancher environment.","required":true,"secret":true},"secretkey":{"type":"string","defaultValue":"","description":"The secret key for your rancher environment.","required":true,"secret":true},"pull":{"type":"boolean","defaultValue":true,"description":"Makes sure you get the latest plugin version.","required":false,"secret":false}},"image":"dubc/drone-rancher-stack-v1","example":"kind: pipeline\nname: default\n\nsteps:\n- name: rancher-v1-staging-upgrade\n  image: dubc/drone-rancher-stack-v1\n  settings:\n    url: rancher.domain.com\n    stack: app-staging        \n    accesskey: RANCHER_ACCESS_KEY\n    secretkey: RANCHER_SECRET_KEY\n    pull: true\n","url":"https://github.com/wayneconnolly/drone-rancher-stack-v1"},{"id":"rds-snapper","name":"AWS RDS Snapper","description":"The rds-snapper plugin cleans up specific RDS instance's snapshots, keeps specified number of copies and creates new snapshots.","settings":{"action":{"type":"string","defaultValue":"","description":"choose which features to execute (clear|create|export)","required":true,"secret":false},"aws_access_key":{"type":"string","defaultValue":"","description":"AWS access key","required":true,"secret":true},"aws_secret_key":{"type":"string","defaultValue":"","description":"AWS secret key","required":true,"secret":true},"aws_region":{"type":"string","defaultValue":"","description":"bucket region (us-east-1, eu-west-1, etc)","required":true,"secret":false},"keep":{"type":"number","defaultValue":5,"description":"number of snapshots to keep","required":false,"secret":false},"dbname":{"type":"string","defaultValue":"","description":"rds instance's name","required":false,"secret":false},"suffix":{"type":"string","defaultValue":"randomly generated","description":"snapshot's name suffix.","required":false,"secret":false}},"image":"quay.io/honestbee/rds-snapper","example":"kind: pipeline\nname: default\n\nsteps:\n- name: rds-snapper\n  image: quay.io/honestbee/rds-snapper\n  settings:\n    aws_access_key: AWS_ACCESS_KEY_ID\n    aws_secret_key: AWS_SECRET_ACCESS_KEY\n    action: \"create\"\n    dbname: \"<db-name>\"\n    suffix: \"<snapshot-name-suffix>\"\n    keep: <numbers-to-keep>\n","url":"https://github.com/honestbee/devops-tools/tree/master/rds-snapper"},{"id":"rocket","name":"Rocket.Chat","description":"Drone plugin for sending message to Rocket.Chant channel using API.","settings":{"url":{"type":"string","defaultValue":"","description":"Rocket.chat url","required":true,"secret":false},"user_id":{"type":"string","defaultValue":"","description":"Rocket.chat user id","required":true,"secret":false},"token":{"type":"string","defaultValue":"","description":"Rocket.chat token","required":true,"secret":true},"channel":{"type":"string","defaultValue":"","description":"Rocket.chat channel","required":true,"secret":false},"avatar_url":{"type":"string","defaultValue":"","description":"override the default avatar of the user","required":false,"secret":false},"message":{"type":"string","defaultValue":"","description":"the message contents (up to 2000 characters)","required":true,"secret":false}},"image":"mike1pol/drone-rocket","example":"kind: pipeline\nname: default\nsteps:\n- name: rocket\n  image: mike1pol/drone-rocket\n  settings:\n    url: xxxxxxxxxx\n    user_id: xxxxxxxxxx\n    token: xxxxxxxxxx\n    channel: xxxxxxxxxx\n","url":"https://github.com/mike1pol/drone-rocket"},{"id":"rsync","name":"rsync","description":"The rsync plugin can be used to transfer files to remote machines, and run a user-defined script afterwards.","settings":{"hosts":{"type":"array","defaultValue":[],"description":"list of hosts (remote machines)","required":true,"secret":false},"port":{"type":"number","defaultValue":22,"description":"port to connect to on the remote machines","required":false,"secret":false},"user":{"type":"string","defaultValue":"root","description":"user to connect as on the remote machines","required":false,"secret":false},"key":{"type":"string","defaultValue":"","description":"private SSH key for the remote machines","required":false,"secret":true},"source":{"type":"string","defaultValue":"./","description":"source folder to copy from","required":false,"secret":false},"target":{"type":"string","defaultValue":"","description":"target folder on remote machines to copy to","required":false,"secret":false},"include":{"type":"array","defaultValue":[],"description":"rsync include filter","required":false,"secret":false},"exclude":{"type":"array","defaultValue":[],"description":"rsync exclude filter","required":false,"secret":false},"recursive":{"type":"boolean","defaultValue":false,"description":"instruct plugin to recursively copy","required":false,"secret":false},"delete":{"type":"boolean","defaultValue":false,"description":"instruct plugin to delete the target folder before copying","required":false,"secret":false},"args":{"type":"string","defaultValue":"","description":"instruct plugin to use these additional rsync CLI arguments, e.g. \"--blocking-io\"","required":false,"secret":false},"script":{"type":"array","defaultValue":[],"description":"list of commands to execute on remote machines over SSH after rsync occurs","required":false,"secret":false},"prescript":{"type":"array","defaultValue":[],"description":"list of commands to execute on remote machines before rsync occurs","required":false,"secret":false}},"image":"drillster/drone-rsync","example":"kind: pipeline\nname: default\n\nsteps:\n- name: deploy\n  image: drillster/drone-rsync\n  settings:\n    hosts: [ \"server-prod1\", \"server-prod2\" ]\n    source: ./target\n    target: ~/packages\n    include: [ \"app.jar\", \"app.jar.md5\" ]\n    script:\n      - cd ~/packages\n      - md5sum -c app.jar.md5\n","url":"https://github.com/drillster/drone-rsync"},{"id":"s3","name":"AWS S3","description":"The S3 plugin uploads files and build artifacts to your S3 bucket, or S3-compatible bucket such as Minio.","settings":{"endpoint":{"type":"string","defaultValue":"","description":"custom endpoint URL (optional, to use a S3 compatible non-Amazon service)","required":false,"secret":false},"access_key":{"type":"string","defaultValue":"","description":"amazon key","required":false,"secret":false},"secret_key":{"type":"string","defaultValue":"","description":"amazon secret","required":false,"secret":true},"bucket":{"type":"string","defaultValue":"","description":"bucket name","required":true,"secret":false},"region":{"type":"string","defaultValue":"","description":"bucket region (us-east-1, eu-west-1, etc)","required":false,"secret":false},"acl":{"type":"string","defaultValue":"","description":"bucket acl (public-read, private, etc)","required":false,"secret":false},"source":{"type":"string","defaultValue":"","description":"source location of the files, using a glob matching pattern. Location must be within the drone workspace.","required":true,"secret":false},"target":{"type":"string","defaultValue":"","description":"target location of files in the bucket.","required":true,"secret":false},"encryption":{"type":"string","defaultValue":"","description":"if provided, use server-side encryption","required":false,"secret":false},"strip_prefix":{"type":"string","defaultValue":"","description":"strip the prefix from source path","required":false,"secret":false},"exclude":{"type":"string","defaultValue":"","description":"glob exclusion patterns","required":false,"secret":false},"path_style":{"type":"boolean","defaultValue":false,"description":"whether path style URLs should be used (true for minio)","required":false,"secret":false}},"image":"plugins/s3","example":"kind: pipeline\nname: default\n\nsteps:\n- name: upload\n  image: plugins/s3\n  settings:\n    bucket: my-bucket-name\n    access_key: a50d28f4dd477bc184fbd10b376de753\n    secret_key: bc5785d3ece6a9cdefa42eb99b58986f9095ff1c\n    source: public/**/*\n    target: /target/location\n","url":"https://github.com/drone-plugins/drone-s3"},{"id":"s3-cache","name":"AWS S3 Cache","description":"The S3 cache plugin can be used to preserve files and directories between builds.","settings":{"endpoint":{"type":"string","defaultValue":"","description":"custom endpoint URL (optional, to use a S3 compatible non-Amazon service)","required":false,"secret":false},"access_key":{"type":"string","defaultValue":"","description":"amazon access key","required":false,"secret":false},"secret_key":{"type":"string","defaultValue":"","description":"amazon secret key","required":false,"secret":true},"restore":{"type":"boolean","defaultValue":false,"description":"mode to restore the build environment from cache","required":false,"secret":false},"rebuild":{"type":"boolean","defaultValue":false,"description":"mode to rebuild the cache from the build environment and specified mounts","required":false,"secret":false},"flush":{"type":"boolean","defaultValue":false,"description":"mode to flush the cache of old cache items (please be sure to set this so we don't waste storage)","required":false,"secret":false},"flush_age":{"type":"number","defaultValue":30,"description":"flush cache files older then x days","required":false,"secret":false},"mount":{"type":"array","defaultValue":[],"description":"list of files/directories to cache","required":false,"secret":false},"debug":{"type":"boolean","defaultValue":false,"description":"enable debug logging","required":false,"secret":false},"filename":{"type":"string","defaultValue":"","description":"filename for the cache","required":false,"secret":false},"root":{"type":"string","defaultValue":"/","description":"root path prefix for all cache default paths (path, fallback_path, and flush_path).","required":false,"secret":false},"path":{"type":"string","defaultValue":"[root]/<owner>/<repo>/<branch>/","description":"path to store the cache file","required":false,"secret":false},"fallback_path":{"type":"string","defaultValue":"[root]/<owner>/<repo>/<branch>/","description":"fallback path for the cache file","required":false,"secret":false},"flush_path":{"type":"string","defaultValue":"[root]/<owner>/<repo>/","description":"path to search for flushable cache files.","required":false,"secret":false},"workdir":{"type":"string","defaultValue":"","description":"path where to restore the cache files to.","required":false,"secret":false}},"image":"plugins/s3-cache","example":"kind: pipeline\nname: default\n\nsteps:\n- name: restore\n  image: plugins/s3-cache\n  settings:\n    pull: true\n    endpoint: http://minio.company.com\n    access_key: myaccesskey\n    secret_key: supersecretKey\n    restore: true\n","url":"https://github.com/drone-plugins/drone-s3-cache"},{"id":"s3-sync","name":"AWS S3 Sync","description":"The S3 sync synchronizes files and build artifacts to your S3 bucket.","settings":{"access_key":{"type":"string","defaultValue":"","description":"AWS access key.","secret":true,"required":false},"secret_key":{"type":"string","defaultValue":"","description":"AWS secret key.","secret":true,"required":false},"bucket":{"type":"string","defaultValue":"","description":"S3 bucket name.","secret":false,"required":true},"region":{"type":"string","defaultValue":"us-east-1","description":"S3 region.","secret":false,"required":false},"source":{"type":"string","defaultValue":".","description":"Source folder to archive.","secret":false,"required":false},"target":{"type":"string","defaultValue":"/","description":"Target location.","secret":false,"required":false},"delete":{"type":"boolean","defaultValue":false,"description":"Delete files after sync.","secret":false,"required":false},"acl":{"type":"string","defaultValue":"","description":"ACL for files.","secret":false,"required":false},"content_type":{"type":"string","defaultValue":"","description":"Content type for files.","secret":false,"required":false},"content_encoding":{"type":"string","defaultValue":"","description":"Content encoding for files.","secret":false,"required":false},"cache_control":{"type":"string","defaultValue":"","description":"Cache control for files.","secret":false,"required":false},"metadata":{"type":"string","defaultValue":"","description":"Additional Metadata for files.","secret":false,"required":false},"redirects":{"type":"string","defaultValue":"","description":"Redirects to create.","secret":false,"required":false},"cloudfront_distribution":{"type":"string","defaultValue":"","description":"Cloudfront distribution ID.","secret":false,"required":false},"dry_run":{"type":"boolean","defaultValue":false,"description":"Dry run.","secret":false,"required":false}},"example":"kind: pipeline\nname: default\n\nsteps:\n- name: sync\nimage: plugins/s3-sync:1\nsettings:\n  access_key: a50d28f4dd477bc184fbd10b376de753\n  secret_key: bc5785d3ece6a9cdefa42eb99b58986f9095ff1c\n  region: us-east-1\n  bucket: my-bucket.s3-website-us-east-1.amazonaws.com\n  source: folder/to/archive\n  target: /target/location\n","url":"https://github.com/drone-plugins/drone-s3-sync"},{"id":"scp","name":"SCP","description":"The SCP plugin copy files and artifacts to target host machine via SSH.","settings":{"host":{"type":"string","defaultValue":"","description":"Target host machine.","secret":false,"required":true},"port":{"type":"number","defaultValue":22,"description":"Target host machine port.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"Target host machine username.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"Target host machine password.","secret":true,"required":true},"key":{"type":"string","defaultValue":"","description":"Target host machine private key.","secret":true,"required":false},"passphrase":{"type":"string","defaultValue":"","description":"Target host machine private key passphrase.","secret":true,"required":false},"target":{"type":"string","defaultValue":"","description":"Target host machine path.","secret":false,"required":true},"source":{"type":"string","defaultValue":"","description":"Source file path.","secret":false,"required":true},"rm":{"type":"boolean","defaultValue":false,"description":"Remove source file after copy.","secret":false,"required":false},"timeout":{"type":"number","defaultValue":30,"description":"Timeout in seconds.","secret":false,"required":false},"command_timeout":{"type":"number","defaultValue":10,"description":"Timeout in minutes.","secret":false,"required":false},"strip_components":{"type":"number","defaultValue":0,"description":"Strip components from the target path.","secret":false,"required":false},"tar_tmp_path":{"type":"string","defaultValue":"","description":"Temporary path for tar.","secret":false,"required":false},"tar_exec":{"type":"string","defaultValue":"","description":"Tar command.","secret":false,"required":false},"overwrite":{"type":"boolean","defaultValue":false,"description":"Overwrite target file if exists.","secret":false,"required":false},"proxy_host":{"type":"string","defaultValue":"","description":"Proxy host.","secret":false,"required":false},"proxy_port":{"type":"number","defaultValue":0,"description":"Proxy port.","secret":false,"required":false},"proxy_username":{"type":"string","defaultValue":"","description":"Proxy username.","secret":false,"required":false},"proxy_password":{"type":"string","defaultValue":"","description":"Proxy password.","secret":true,"required":false},"proxy_key":{"type":"string","defaultValue":"","description":"Proxy private key.","secret":true,"required":false},"proxy_key_path":{"type":"string","defaultValue":"","description":"Proxy private key path.","secret":false,"required":false},"proxy_key_passphrase":{"type":"string","defaultValue":"","description":"Proxy private key passphrase.","secret":true,"required":false}},"example":"kind: pipeline\nname: default\n\nsteps:\n- name: scp files\nimage: appleboy/drone-scp\nsettings:\n  host: example.com\n  username: foo\n  password: bar\n  port: 22\n  target: /var/www/deploy/${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}\n  source: release.tar.gz\n","url":"https://github.com/appleboy/drone-scp"},{"id":"serverchan","name":"ServerChan(Server酱)","description":"The ServerChan plugin posts build status messages to your account.","settings":{"key":{"type":"string","defaultValue":"","description":"ServerChan key.","secret":true,"required":true},"text":{"type":"string","defaultValue":"","description":"Notification title","secret":false,"required":true},"desp":{"type":"string","defaultValue":"","description":"Message description.","secret":false,"required":false}},"image":"yakumioto/serverchan","example":"kind: pipeline\nname: default\n\nsteps:\n  - name: send-wechat\n    image: yakumioto/serverchan\n    settings:\n      key: SCU48558T164ff96a3316d8a22cacea21d66b5caed80baa044\n      text: hello world\n      desp: Send by ServerChan\n","url":"https://github.com/yakumioto/drone-serverchan"},{"id":"sftp-cache","name":"SFTP Cache","description":"Use this plugin for caching build artifacts to speed up your build times. This plugin can create and restore caches of any folders.","settings":{"server":{"type":"string","defaultValue":"","description":"target hostname or IP","secret":false,"required":true},"port":{"type":"string","defaultValue":"","description":"ssh port of target host","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"account for target host user","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"password for target host user","secret":true,"required":false},"key":{"type":"string","defaultValue":"","description":"plain text of user private key","secret":true,"required":false},"rebuild":{"type":"boolean","defaultValue":"","description":"flag to trigger a rebuild","secret":false,"required":false},"restoe":{"type":"boolean","defaultValue":"","description":"flag to trigger a restore","secret":false,"required":false},"ignore_branch":{"type":"boolean","defaultValue":"","description":"flag to ignore commit branch name on hash value","secret":false,"required":false}},"image":"appleboy/drone-sftp-cache","example":"kind: pipeline\nname: default\n\nsteps:\n- name: restore_cache\n  image: appleboy/drone-sftp-cache\n  settings:\n    server: example.com\n    port: 22\n    username: test\n    password: test\n    path: /var/cache/drone\n    restore: true\n    mount:\n      - node_modules\n- name: build\n  image: node:latest\n  commands:\n    - npm install\n- name: rebuild_cache\n  image: appleboy/drone-sftp-cache\n  settings:\n    server: example.com\n    port: 22\n    username: test\n    password: test\n    path: /var/cache/drone\n    rebuild: true\n    mount:\n      - node_modules\n","url":"https://github.com/appleboy/drone-sftp-cache"},{"id":"slack","name":"Slack","description":"The Slack plugin posts build status messages to your channel.","settings":{"webhook":{"type":"string","defaultValue":false,"description":"incoming webhook url for posting to a channel","secret":false,"required":true},"channel":{"type":"string","defaultValue":false,"description":"messages sent to the above webhook are posted here","secret":false,"required":false},"recipient":{"type":"string","defaultValue":false,"description":"alternatively you can send it to a specific user","secret":false,"required":false},"username":{"type":"string","defaultValue":false,"description":"choose the username this integration will post as","secret":false,"required":false},"template":{"type":"string","defaultValue":false,"description":"overwrite the default message template","secret":false,"required":false},"image_url":{"type":"string","defaultValue":false,"description":"a valid URL to an image file that will be displayed inside a message attachment","secret":false,"required":false},"icon_url":{"type":"string","defaultValue":false,"description":"a valid URL that displays a image to the left of the username","secret":false,"required":false},"icon_emoji":{"type":"string","defaultValue":false,"description":"displays a emoji to the left of the username","secret":false,"required":false},"link_names":{"type":"string","defaultValue":false,"description":"links usernames and channels in the message","secret":false,"required":false}},"example":"kind: pipeline\nname: default\n\nsteps:\n- name: slack\nimage: plugins/slack\nsettings:\n  webhook: https://hooks.slack.com/services/...\n  channel: dev\n  icon_url: https://unsplash.it/256/256/?random\n","url":"https://github.com/drone-plugins/drone-slack"},{"id":"slack-blame","name":"Slack Blame","description":"Use the Slack Blame plugin to send a message to a Slack channel or through direct message when a build completes. You will need to supply Drone with an access token to the Slack API. You can create a new access token at [https://api.slack.com/web](https://api.slack.com/web).","settings":{"token":{"type":"string","defaultValue":"","description":"Slack access token.","secret":true,"required":true},"channel":{"type":"string","defaultValue":"","description":"Slack channel.","secret":false,"required":true},"mapping":{"type":"array","defaultValue":"","description":"Mapping of authors to Slack users.","secret":false,"required":true},"success_username":{"type":"string","defaultValue":"","description":"Username for successful builds.","secret":false,"required":true},"success_icon":{"type":"string","defaultValue":"","description":"Icon for successful builds.","secret":false,"required":true},"success_template":{"type":"string","defaultValue":"","description":"Template for successful builds.","secret":false,"required":true},"success_image_attachments":{"type":"array","defaultValue":"","description":"List of image attachments for successful builds.","secret":false,"required":true},"failure_username":{"type":"string","defaultValue":"","description":"Username for failed builds.","secret":false,"required":true},"failure_icon":{"type":"string","defaultValue":"","description":"Icon for failed builds.","secret":false,"required":true},"failure_template":{"type":"string","defaultValue":"","description":"Template for failed builds.","secret":false,"required":true},"failure_image_attachments":{"type":"array","defaultValue":"","description":"List of image attachments for failed builds.","secret":false,"required":true}},"example":"kind: pipeline\nname: default\n\nsteps:\n- name: notify\nimage: plugins/slack-blame\nsettings:\n  token: your-secret-token\n  channel: dev\n  success_template: |\n    The build is fixed! Thanks @{{slack.name}}\n  success_image_attachments:\n    - \"http://i.imgur.com/TP4PIxc.jpg\"\n  failure_template: |\n    The build is broken! Blame {{slack.name}}\n  failure_image_attachments:\n    - \"http://cdn.meme.am/instances/51000361.jpg\"\n","url":"https://github.com/drone-plugins/drone-slack-blame"},{"id":"sonar-plugin","name":"SonarQube","description":"This plugin can scan your code quality and post the analysis report to your SonarQube server. SonarQube (previously called Sonar), is an open source code quality management platform.","settings":{"sonar_host":{"type":"string","defaultValue":"","description":"Hostname of the sonar server.","secret":false,"required":true},"sonar_token":{"type":"string","defaultValue":"","description":"Access token.","secret":true,"required":true}},"example":"kind: pipeline\nname: default\n\nsteps:\n- name: code-analysis\nimage: aosapps/drone-sonar-plugin\nsettings:\n    sonar_host:\n      from_secret: sonar_host\n    sonar_token:\n      from_secret: sonar_token\n","url":"https://github.com/aosapps/drone-sonar-plugin"},{"id":"ssh","name":"SSH","description":"Use the SSH plugin to execute commands on a remote server.","settings":{"host":{"type":"string","defaultValue":"","description":"Hostname or IP address of the server.","secret":false,"required":true},"port":{"type":"string","defaultValue":22,"description":"Port of the server.","secret":false,"required":false},"username":{"type":"string","defaultValue":"","description":"account for target host user.","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"Password to login to the server.","secret":true,"required":false},"key":{"type":"string","defaultValue":"","description":"plain text of user private key","secret":true,"required":false},"key_path":{"type":"string","defaultValue":"","description":"Path to the private key to login to the server.","secret":false,"required":false},"envs":{"type":"array","defaultValue":[],"description":"custom secrets which are made available in the script section.","secret":false,"required":false},"script":{"type":"string","defaultValue":"","description":"Command to execute on the server.","secret":false,"required":false},"script_stop":{"type":"boolean","defaultValue":false,"description":"stop script after first failure.","secret":false,"required":false},"timeout":{"type":"string","defaultValue":"30s","description":"Timeout is the maximum amount of time for the ssh connection to establish.","secret":false,"required":false},"command_timeout":{"type":"string","defaultValue":"10m","description":"Command timeout is the maximum amount of time for the execute commands","secret":false,"required":false},"proxy_host":{"type":"string","defaultValue":"","description":"Proxy hostname or IP address.","secret":false,"required":false},"proxy_port":{"type":"string","defaultValue":"","description":"Proxy port.","secret":false,"required":false},"proxy_username":{"type":"string","defaultValue":"","description":"Proxy username.","secret":false,"required":false},"proxy_password":{"type":"string","defaultValue":"","description":"Proxy password.","secret":true,"required":false},"proxy_key":{"type":"string","defaultValue":"","description":"lain text of proxy private key.","secret":true,"required":false},"proxy_key_path":{"type":"string","defaultValue":"","description":"Path to the private key to login to the proxy.","secret":false,"required":false}},"image":"appleboy/drone-ssh","example":"kind: pipeline\nname: default\n\nsteps:\n- name: ssh\n  image: appleboy/drone-ssh\n  settings:\n    host:\n      - example1.com\n      - example2.com\n    username: ubuntu\n    password:\n      from_secret: ssh_password\n    port: 22\n    command_timeout: 2m\n    script:\n      - echo \"Hello World\"\n","url":"https://github.com/appleboy/drone-ssh"},{"id":"telegram","name":"Telegram","description":"The Telegram plugin posts build status messages to your account.","settings":{"token":{"type":"string","defaultValue":"","description":"telegram token from telegram developer center","secret":true,"required":true},"to":{"type":"string","defaultValue":"","description":"telegram user id (can be requested from the @userinfobot inside Telegram)","secret":false,"required":true},"message":{"type":"string","defaultValue":"","description":"overwrite the default message template","secret":false,"required":false},"photo":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"document":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"sticker":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"audio":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"voice":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"location":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"video":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"venue":{"type":"string","defaultValue":"","description":"local file path","secret":false,"required":false},"format":{"type":"string","defaultValue":"","description":"markdown or html format","secret":false,"required":false}},"image":"appleboy/drone-telegram","example":"kind: pipeline\nname: default\n\nsteps:\n- name: send telegram notification\n  image: appleboy/drone-telegram\n  settings:\n    token: xxxxxxxxxx\n    to: telegram_user_id\n    message_file: message_file.tpl\n    template_vars:\n      env: testing\n      app: MyApp\n","url":"https://github.com/appleboy/drone-telegram"},{"id":"terraform","name":"Terraform","description":"The Terraform plugin applies the infrastructure configuration contained within the repository.","settings":{"plan":{"type":"boolean","defaultValue":false,"description":"Whether to run a plan before applying the configuration.","secret":false,"required":false},"remote":{"type":"array","defaultValue":"","description":"contains the configuration for the Terraform remote state tracking.","secret":false,"required":false},"vars":{"type":"array","defaultValue":"","description":"The backend to use for the remote.","secret":false,"required":false},"secrets":{"type":"array","defaultValue":"","description":"variables to pass to the Terraform `plan` and `apply` commands. Each value is passed as a `-var <key>=<ENVVAR>` option.  The `ENVVAR` is read as the key/pair value.","secret":true,"required":false},"ca_cert":{"type":"string","defaultValue":"","description":"ca cert to add to your environment to allow terraform to use internal/private resources","secret":true,"required":false},"sensitive":{"type":"boolean","defaultValue":false,"description":"Whether or not to suppress terraform commands to stdout.","secret":true,"required":false},"role_arn_to_assume":{"type":"string","defaultValue":"","description":"A role to assume before running the terraform commands.","secret":true,"required":false},"root_dir":{"type":"string","defaultValue":"","description":"The root directory where the terraform files live. When unset, the top level directory will be assumed.","secret":true,"required":false},"parallelism":{"type":"string","defaultValue":"","description":"The number of concurrent operations as Terraform walks its graph.","secret":true,"required":false}},"image":"jmccann/drone-terraform:1","example":"kind: pipeline\ntype: docker\nname: default\n\nsteps:\n  - name: terraform\n    image: jmccann/drone-terraform:1\n    settings:\n      plan: false\n    targets:\n      - aws_security_group.generic_sg\n      - aws_security_group.app_sg\n","url":"https://github.com/jmccann/drone-terraform"},{"id":"upx","name":"UPX","description":"The UPX plugin can be used to pack executables.","settings":{"level":{"type":"string","defaultValue":5,"description":"Compression level, a value between 1 and 9, the bigger the better.","secret":false,"required":false},"save_file":{"type":"string","defaultValue":"","description":"The path to the file to save the upx file.","secret":false,"required":false},"original_file":{"type":"string","defaultValue":"","description":"The path to the file to save the original file.","secret":false,"required":false}},"image":"cnbattle/drone-upx","example":"kind: pipeline\nname: default\nsteps:\n- name: upx\n  image: cnbattle/drone-upx\n  settings:\n    level: 9 //default 5\n    save_file: ./executable_upx_file\n    original_file: ./executable_original_file\n","url":"https://github.com/cnbattle/drone-upx"},{"id":"volume-cache","name":"Volume Cache","description":"The volume cache plugin can be used to preserve files and directories between builds.","settings":{"restore":{"type":"boolean","defaultValue":false,"description":"Restore cache from previous build.","secret":false,"required":false},"rebuild":{"type":"boolean","defaultValue":false,"description":"Rebuild cache.","secret":false,"required":false},"mount":{"type":"array","defaultValue":[],"description":"list of folders or files to cache","secret":false,"required":false}},"image":"drillster/drone-volume-cache","example":"kind: pipeline\nname: default\n\nsteps:\n- name: restore-cache\n  image: drillster/drone-volume-cache\n  volumes:\n    - name: cache\n      path: /cache\n  settings:\n    restore: true\n    mount:\n      - ./node_modules\n- name: rebuild-cache\n  image: drillster/drone-volume-cache\n  volumes:\n    - name: cache\n      path: /cache\n  settings:\n    rebuild: true\n    mount:\n      - ./node_modules\n\nvolumes:\n  - name: cache\n    host:\n      path: /tmp/cache\n","url":"https://github.com/drillster/drone-volume-cache"},{"id":"webdav","name":"WebDAV","description":"The WebDAV plugin will allow pushing build artifacts to any WebDAV server, including Nextcloud or ownCloud.","settings":{"file":{"type":"string","defaultValue":"","description":"The path to the file to upload.","secret":false,"required":true},"destination":{"type":"string","defaultValue":"","description":"The destination URL.","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"The username to authenticate with.","secret":false,"required":true},"password":{"type":"string","defaultValue":"","description":"The password to authenticate with.","secret":true,"required":false}},"image":"vividboarder/drone-webdav","example":"kind: pipeline\nname: default\n\nsteps:\n  - name: upload_debug\n    image: vividboarder/drone-webdav\n    settings:\n      file: com.vividboarder.otbeta/build/outputs/apk/com.vividboarder.otbeta-debug.apk\n      destination: https://my.nextcloud.com/remote.php/dav/files/vividboarder/Android/Apks/\n      username: admin\n      password: password\n","url":"https://github.com/vividboarder/drone-webdav"},{"id":"webhook","name":"Webhook","description":"Use the Webhook plugin to notify services via Webhook when a build completes. You will need to supply Drone with outgoing Webhook URLs.","settings":{"urls":{"type":"string","defaultValue":"","description":"The URLs to send the webhook to.","secret":false,"required":true},"username":{"type":"string","defaultValue":"","description":"The username to use for basic auth.","secret":false,"required":false},"password":{"type":"string","defaultValue":"","description":"The password to use for basic auth.","secret":true,"required":false},"method":{"type":"string","defaultValue":"POST","description":"The HTTP method to use for the request.","secret":false,"required":false},"content_type":{"type":"string","defaultValue":"application/json","description":"The content type of the webhook.","secret":false,"required":false},"template":{"type":"string","defaultValue":"","description":"Custom template for webhook","secret":false,"required":false},"headers":{"type":"array","defaultValue":"","description":"Map of custom headers","secret":false,"required":false},"skip_verify":{"type":"boolean","defaultValue":false,"description":"Skip SSL verification.","secret":false,"required":false},"debug":{"type":"boolean","defaultValue":false,"description":"Enable debug information.","secret":false,"required":false}},"image":"plugins/webhook","example":"kind: pipeline\nname: default\n\nsteps:\n- name: send\n  image: plugins/webhook\n  settings:\n    username: myusername\n    password: mypassword\n    urls: https://your.webhook/...\n    content_type: application/json\n    template: |\n      {\n        \"owner\": \"{{ repo.owner }}\",\n        \"repo\": \"{{ repo.name }}\",\n        \"status\": \"{{ build.status }}\",\n      }\n","url":"https://github.com/drone-plugins/drone-webhook"},{"id":"wechat","name":"Wechat","description":"The Wechat plugin posts build status messages to your account.","settings":{"corpid":{"type":"string","defaultValue":"","description":"The corpid for authorization","required":true,"secret":true},"corp_secret":{"type":"string","defaultValue":"","description":"The corp_secret for authorization","required":true,"secret":true},"agent_id":{"type":"string","defaultValue":"","description":"The agent id to send the message","required":true,"secret":false},"to_party":{"type":"string","defaultValue":"","description":"The party id to send the message","required":false,"secret":false},"to_user":{"type":"string","defaultValue":"","description":"The user id to send the message","required":false,"secret":false},"to_tag":{"type":"string","defaultValue":"","description":"The tag id to send the message","required":false,"secret":false},"safe":{"type":"boolean","defaultValue":false,"description":"encrypt message, default is false","required":false,"secret":false},"msg_url":{"type":"string","defaultValue":"","description":"The link for the text card click","required":false,"secret":false},"btn_text":{"type":"string","defaultValue":"","description":"The text for the button on the card","required":false,"secret":false},"title":{"type":"string","defaultValue":"","description":"The title for the card","required":false,"secret":false},"message":{"type":"string","defaultValue":"","description":"Notification body message, support markdown","required":true,"secret":false}},"image":"lizheming/drone-wechat","example":"kind: pipeline\nname: default\n\nsteps:\n- name: wechat\n  image: lizheming/drone-wechat\n  settings:\n    corpid: \n      from_secret: wechat_corpid\n    corp_secret:\n      from_secret: wechat_corp_secret\n    agent_id: \n      from_secret: agent_id\n    to_user: 111\n    to_party: 112\n    to_tag: ${DRONE_REPO_NAME}\n    msg_url: ${DRONE_BUILD_LINK}\n    safe: 1\n    btn_txt: more\n    title: ${DRONE_REPO_NAME}\n    message: >\n      {%if success %}\n        build {{build.number}} succeeded. Good job.\n      {% else %}\n        build {{build.number}} failed. Fix me please.\n      {% endif %}\n","url":"https://github.com/lizheming/drone-wechat"},{"id":"wechat-2","name":"Wechat for Work","description":"Drone plugin for WeChat for Work to show build notifications.","settings":{"corpid":{"type":"string","defaultValue":"","description":"The corpid for authorization","required":true,"secret":true},"corp_secret":{"type":"string","defaultValue":"","description":"The corp_secret for authorization","required":true,"secret":true},"agent_id":{"type":"string","defaultValue":"","description":"The agent id to send the message","required":true,"secret":false},"to_party":{"type":"string","defaultValue":"","description":"The party id to send the message","required":false,"secret":false},"to_user":{"type":"string","defaultValue":"","description":"The user id to send the message","required":false,"secret":false},"to_tag":{"type":"string","defaultValue":"","description":"The tag id to send the message","required":false,"secret":false},"msg_url":{"type":"string","defaultValue":"","description":"The link for the text card click","required":false,"secret":false},"btntxt":{"type":"string","defaultValue":"","description":"The text for the button on the card","required":false,"secret":false},"title":{"type":"string","defaultValue":"","description":"Notification title","required":false,"secret":false},"description":{"type":"string","defaultValue":"","description":"Text description of the card","required":true,"secret":false}},"image":"clem109/drone-wechat","example":"kind: pipeline\nname: default\n\nsteps:\n- name: wechat\n  image: clem109/drone-wechat\n  settings:\n    corpid: corpid\n    corp_secret: secret\n    agent_id: 1234567\n    title: ${DRONE_REPO_NAME}\n    description: \"Build Number: ${DRONE_BUILD_NUMBER} failed. ${DRONE_COMMIT_AUTHOR} please fix. Check the results here: ${DRONE_BUILD_LINK} \"\n    msg_url: ${DRONE_BUILD_LINK}\n    btn_txt: btn\n","url":"https://github.com/clem109/drone-wechat"}]
